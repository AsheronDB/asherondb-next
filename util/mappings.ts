// Mappings from database enums to application code

import type { StringIndexedDict } from "./types"

// ACE::PropertyString.cs
export enum PropertyString {
  Undef = 0,
  Name = 1,
  Title = 2,
  Sex = 3,
  HeritageGroup = 4,
  Template = 5,
  AttackersName = 6,
  Inscription = 7,
  ScribeName = 8,
  VendorsName = 9,
  Fellowship = 10,
  MonarchsName = 11,
  LockCode = 12,
  KeyCode = 13,
  Use = 14,
  ShortDesc = 15,
  LongDesc = 16,
  ActivationTalk = 17,
  UseMessage = 18,
  ItemHeritageGroupRestriction = 19,
  PluralName = 20,
  MonarchsTitle = 21,
  ActivationFailure = 22,
  ScribeAccount = 23,
  TownName = 24,
  CraftsmanName = 25,
  UsePkServerError = 26,
  ScoreCachedText = 27,
  ScoreDefaultEntryFormat = 28,
  ScoreFirstEntryFormat = 29,
  ScoreLastEntryFormat = 30,
  ScoreOnlyEntryFormat = 31,
  ScoreNoEntry = 32,
  Quest = 33,
  GeneratorEvent = 34,
  PatronsTitle = 35,
  HouseOwnerName = 36,
  QuestRestriction = 37,
  AppraisalPortalDestination = 38,
  TinkerName = 39,
  ImbuerName = 40,
  HouseOwnerAccount = 41,
  DisplayName = 42,
  DateOfBirth = 43,
  ThirdPartyApi = 44,
  KillQuest = 45,
  Afk = 46,
  AllegianceName = 47,
  AugmentationAddQuest = 48,
  KillQuest2 = 49,
  KillQuest3 = 50,
  UseSendsSignal = 51,
  GearPlatingName = 52,
  PCAPRecordedCurrentMotionState = 8006,
  PCAPRecordedServerName = 8031,
  PCAPRecordedCharacterName = 8032,
  AllegianceMotd = 9001,
  AllegianceMotdSetBy = 9002,
  AllegianceSpeakerTitle = 9003,
  AllegianceSeneschalTitle = 9004,
  AllegianceCastellanTitle = 9005,
  GodState = 9006,
  TinkerLog = 9007,
}

export const PropertyStringName: StringIndexedDict<string> = {
  [PropertyString.Undef]: "Undef",
  [PropertyString.Name]: "Name",
  [PropertyString.Title]: "Title",
  [PropertyString.Sex]: "Sex",
  [PropertyString.HeritageGroup]: "HeritageGroup",
  [PropertyString.Template]: "Template",
  [PropertyString.AttackersName]: "AttackersName",
  [PropertyString.Inscription]: "Inscription",
  [PropertyString.ScribeName]: "ScribeName",
  [PropertyString.VendorsName]: "VendorsName",
  [PropertyString.Fellowship]: "Fellowship",
  [PropertyString.MonarchsName]: "MonarchsName",
  [PropertyString.LockCode]: "LockCode",
  [PropertyString.KeyCode]: "KeyCode",
  [PropertyString.Use]: "Use",
  [PropertyString.ShortDesc]: "ShortDesc",
  [PropertyString.LongDesc]: "LongDesc",
  [PropertyString.ActivationTalk]: "ActivationTalk",
  [PropertyString.UseMessage]: "UseMessage",
  [PropertyString.ItemHeritageGroupRestriction]: "ItemHeritageGroupRestriction",
  [PropertyString.PluralName]: "PluralName",
  [PropertyString.MonarchsTitle]: "MonarchsTitle",
  [PropertyString.ActivationFailure]: "ActivationFailure",
  [PropertyString.ScribeAccount]: "ScribeAccount",
  [PropertyString.TownName]: "TownName",
  [PropertyString.CraftsmanName]: "CraftsmanName",
  [PropertyString.UsePkServerError]: "UsePkServerError",
  [PropertyString.ScoreCachedText]: "ScoreCachedText",
  [PropertyString.ScoreDefaultEntryFormat]: "ScoreDefaultEntryFormat",
  [PropertyString.ScoreFirstEntryFormat]: "ScoreFirstEntryFormat",
  [PropertyString.ScoreLastEntryFormat]: "ScoreLastEntryFormat",
  [PropertyString.ScoreOnlyEntryFormat]: "ScoreOnlyEntryFormat",
  [PropertyString.ScoreNoEntry]: "ScoreNoEntry",
  [PropertyString.Quest]: "Quest",
  [PropertyString.GeneratorEvent]: "GeneratorEvent",
  [PropertyString.PatronsTitle]: "PatronsTitle",
  [PropertyString.HouseOwnerName]: "HouseOwnerName",
  [PropertyString.QuestRestriction]: "QuestRestriction",
  [PropertyString.AppraisalPortalDestination]: "AppraisalPortalDestination",
  [PropertyString.TinkerName]: "TinkerName",
  [PropertyString.ImbuerName]: "ImbuerName",
  [PropertyString.HouseOwnerAccount]: "HouseOwnerAccount",
  [PropertyString.DisplayName]: "DisplayName",
  [PropertyString.DateOfBirth]: "DateOfBirth",
  [PropertyString.ThirdPartyApi]: "ThirdPartyApi",
  [PropertyString.KillQuest]: "KillQuest",
  [PropertyString.Afk]: "Afk",
  [PropertyString.AllegianceName]: "AllegianceName",
  [PropertyString.AugmentationAddQuest]: "AugmentationAddQuest",
  [PropertyString.KillQuest2]: "KillQuest2",
  [PropertyString.KillQuest3]: "KillQuest3",
  [PropertyString.UseSendsSignal]: "UseSendsSignal",
  [PropertyString.GearPlatingName]: "GearPlatingName",
  [PropertyString.PCAPRecordedCurrentMotionState]: "PCAPRecordedCurrentMotionState",
  [PropertyString.PCAPRecordedServerName]: "PCAPRecordedServerName",
  [PropertyString.PCAPRecordedCharacterName]: "PCAPRecordedCharacterName",
  [PropertyString.AllegianceMotd]: "AllegianceMotd",
  [PropertyString.AllegianceMotdSetBy]: "AllegianceMotdSetBy",
  [PropertyString.AllegianceSpeakerTitle]: "AllegianceSpeakerTitle",
  [PropertyString.AllegianceSeneschalTitle]: "AllegianceSeneschalTitle",
  [PropertyString.AllegianceCastellanTitle]: "AllegianceCastellanTitle",
  [PropertyString.GodState]: "GodState",
  [PropertyString.TinkerLog]: "TinkerLog",
}

// ACE::PropertyAttribute.cs
export enum PropertyAttribute {
  Undef = 0,
  Strength = 1,
  Endurance = 2,
  Quickness = 3,
  Coordination = 4,
  Focus = 5,
  Self = 6,
}

export const PropertyAttributeName: StringIndexedDict<string> = {
  [PropertyAttribute.Undef]: "Undefined",
  [PropertyAttribute.Strength]: "Strength",
  [PropertyAttribute.Endurance]: "Endurance",
  [PropertyAttribute.Quickness]: "Quickness",
  [PropertyAttribute.Coordination]: "Coordination",
  [PropertyAttribute.Focus]: "Focus",
  [PropertyAttribute.Self]: "Self",
}

// ACE::PropertyAttribute2nd.cs
export enum PropertyAttribute2nd {
  Undef = 0,
  MaxHealth = 1,
  Health = 2,
  MaxStamina = 3,
  Stamina = 4,
  MaxMana = 5,
  Mana = 6,
}

export const PropertyAttribute2ndName: StringIndexedDict<string> = {
  [PropertyAttribute2nd.Undef]: "Undef",
  [PropertyAttribute2nd.MaxHealth]: "MaxHealth",
  [PropertyAttribute2nd.Health]: "Health",
  [PropertyAttribute2nd.MaxStamina]: "MaxStamina",
  [PropertyAttribute2nd.Stamina]: "Stamina",
  [PropertyAttribute2nd.MaxMana]: "MaxMana",
  [PropertyAttribute2nd.Mana]: "Mana",
}

// ACE::PropertyInt.cs
export enum PropertyInt {
  Undef = 0,
  ItemType = 1,
  CreatureType = 2,
  PaletteTemplate = 3,
  ClothingPriority = 4,
  EncumbranceVal = 5,
  ItemsCapacity = 6,
  ContainersCapacity = 7,
  Mass = 8,
  ValidLocations = 9,
  CurrentWieldedLocation = 10,
  MaxStackSize = 11,
  StackSize = 12,
  StackUnitEncumbrance = 13,
  StackUnitMass = 14,
  StackUnitValue = 15,
  ItemUseable = 16,
  RareId = 17,
  UiEffects = 18,
  Value = 19,
  CoinValue = 20,
  TotalExperience = 21,
  AvailableCharacter = 22,
  TotalSkillCredits = 23,
  AvailableSkillCredits = 24,
  Level = 25,
  AccountRequirements = 26,
  ArmorType = 27,
  ArmorLevel = 28,
  AllegianceCpPool = 29,
  AllegianceRank = 30,
  ChannelsAllowed = 31,
  ChannelsActive = 32,
  Bonded = 33,
  MonarchsRank = 34,
  AllegianceFollowers = 35,
  ResistMagic = 36,
  ResistItemAppraisal = 37,
  ResistLockpick = 38,
  DeprecatedResistRepair = 39,
  CombatMode = 40,
  CurrentAttackHeight = 41,
  CombatCollisions = 42,
  NumDeaths = 43,
  Damage = 44,
  DamageType = 45,
  DefaultCombatStyle = 46,
  AttackType = 47,
  WeaponSkill = 48,
  WeaponTime = 49,
  AmmoType = 50,
  CombatUse = 51,
  ParentLocation = 52,
  PlacementPosition = 53,
  WeaponEncumbrance = 54,
  WeaponMass = 55,
  ShieldValue = 56,
  ShieldEncumbrance = 57,
  MissileInventoryLocation = 58,
  FullDamageType = 59,
  WeaponRange = 60,
  AttackersSkill = 61,
  DefendersSkill = 62,
  AttackersSkillValue = 63,
  AttackersClass = 64,
  Placement = 65,
  CheckpointStatus = 66,
  Tolerance = 67,
  TargetingTactic = 68,
  CombatTactic = 69,
  HomesickTargetingTactic = 70,
  NumFollowFailures = 71,
  FriendType = 72,
  FoeType = 73,
  MerchandiseItemTypes = 74,
  MerchandiseMinValue = 75,
  MerchandiseMaxValue = 76,
  NumItemsSold = 77,
  NumItemsBought = 78,
  MoneyIncome = 79,
  MoneyOutflow = 80,
  MaxGeneratedObjects = 81,
  InitGeneratedObjects = 82,
  ActivationResponse = 83,
  OriginalValue = 84,
  NumMoveFailures = 85,
  MinLevel = 86,
  MaxLevel = 87,
  LockpickMod = 88,
  BoosterEnum = 89,
  BoostValue = 90,
  MaxStructure = 91,
  Structure = 92,
  PhysicsState = 93,
  TargetType = 94,
  RadarBlipColor = 95,
  EncumbranceCapacity = 96,
  LoginTimestamp = 97,
  CreationTimestamp = 98,
  PkLevelModifier = 99,
  GeneratorType = 100,
  AiAllowedCombatStyle = 101,
  LogoffTimestamp = 102,
  GeneratorDestructionType = 103,
  ActivationCreateClass = 104,
  ItemWorkmanship = 105,
  ItemSpellcraft = 106,
  ItemCurMana = 107,
  ItemMaxMana = 108,
  ItemDifficulty = 109,
  ItemAllegianceRankLimit = 110,
  PortalBitmask = 111,
  AdvocateLevel = 112,
  Gender = 113,
  Attuned = 114,
  ItemSkillLevelLimit = 115,
  GateLogic = 116,
  ItemManaCost = 117,
  Logoff = 118,
  Active = 119,
  AttackHeight = 120,
  NumAttackFailures = 121,
  AiCpThreshold = 122,
  AiAdvancementStrategy = 123,
  Version = 124,
  Age = 125,
  VendorHappyMean = 126,
  VendorHappyVariance = 127,
  CloakStatus = 128,
  VitaeCpPool = 129,
  NumServicesSold = 130,
  MaterialType = 131,
  NumAllegianceBreaks = 132,
  ShowableOnRadar = 133,
  PlayerKillerStatus = 134,
  VendorHappyMaxItems = 135,
  ScorePageNum = 136,
  ScoreConfigNum = 137,
  ScoreNumScores = 138,
  DeathLevel = 139,
  AiOptions = 140,
  OpenToEveryone = 141,
  GeneratorTimeType = 142,
  GeneratorStartTime = 143,
  GeneratorEndTime = 144,
  GeneratorEndDestructionType = 145,
  XpOverride = 146,
  NumCrashAndTurns = 147,
  ComponentWarningThreshold = 148,
  HouseStatus = 149,
  HookPlacement = 150,
  HookType = 151,
  HookItemType = 152,
  AiPpThreshold = 153,
  GeneratorVersion = 154,
  HouseType = 155,
  PickupEmoteOffset = 156,
  WeenieIteration = 157,
  WieldRequirements = 158,
  WieldSkillType = 159,
  WieldDifficulty = 160,
  HouseMaxHooksUsable = 161,
  HouseCurrentHooksUsable = 162,
  AllegianceMinLevel = 163,
  AllegianceMaxLevel = 164,
  HouseRelinkHookCount = 165,
  SlayerCreatureType = 166,
  ConfirmationInProgress = 167,
  ConfirmationTypeInProgress = 168,
  TsysMutationData = 169,
  NumItemsInMaterial = 170,
  NumTimesTinkered = 171,
  AppraisalLongDescDecoration = 172,
  AppraisalLockpickSuccessPercent = 173,
  AppraisalPages = 174,
  AppraisalMaxPages = 175,
  AppraisalItemSkill = 176,
  GemCount = 177,
  GemType = 178,
  ImbuedEffect = 179,
  AttackersRawSkillValue = 180,
  ChessRank = 181,
  ChessTotalGames = 182,
  ChessGamesWon = 183,
  ChessGamesLost = 184,
  TypeOfAlteration = 185,
  SkillToBeAltered = 186,
  SkillAlterationCount = 187,
  HeritageGroup = 188,
  TransferFromAttribute = 189,
  TransferToAttribute = 190,
  AttributeTransferCount = 191,
  FakeFishingSkill = 192,
  NumKeys = 193,
  DeathTimestamp = 194,
  PkTimestamp = 195,
  VictimTimestamp = 196,
  HookGroup = 197,
  AllegianceSwearTimestamp = 198,
  HousePurchaseTimestamp = 199,
  RedirectableEquippedArmorCount = 200,
  MeleeDefenseImbuedEffectTypeCache = 201,
  MissileDefenseImbuedEffectTypeCache = 202,
  MagicDefenseImbuedEffectTypeCache = 203,
  ElementalDamageBonus = 204,
  ImbueAttempts = 205,
  ImbueSuccesses = 206,
  CreatureKills = 207,
  PlayerKillsPk = 208,
  PlayerKillsPkl = 209,
  RaresTierOne = 210,
  RaresTierTwo = 211,
  RaresTierThree = 212,
  RaresTierFour = 213,
  RaresTierFive = 214,
  AugmentationStat = 215,
  AugmentationFamilyStat = 216,
  AugmentationInnateFamily = 217,
  AugmentationInnateStrength = 218,
  AugmentationInnateEndurance = 219,
  AugmentationInnateCoordination = 220,
  AugmentationInnateQuickness = 221,
  AugmentationInnateFocus = 222,
  AugmentationInnateSelf = 223,
  AugmentationSpecializeSalvaging = 224,
  AugmentationSpecializeItemTinkering = 225,
  AugmentationSpecializeArmorTinkering = 226,
  AugmentationSpecializeMagicItemTinkering = 227,
  AugmentationSpecializeWeaponTinkering = 228,
  AugmentationExtraPackSlot = 229,
  AugmentationIncreasedCarryingCapacity = 230,
  AugmentationLessDeathItemLoss = 231,
  AugmentationSpellsRemainPastDeath = 232,
  AugmentationCriticalDefense = 233,
  AugmentationBonusXp = 234,
  AugmentationBonusSalvage = 235,
  AugmentationBonusImbueChance = 236,
  AugmentationFasterRegen = 237,
  AugmentationIncreasedSpellDuration = 238,
  AugmentationResistanceFamily = 239,
  AugmentationResistanceSlash = 240,
  AugmentationResistancePierce = 241,
  AugmentationResistanceBlunt = 242,
  AugmentationResistanceAcid = 243,
  AugmentationResistanceFire = 244,
  AugmentationResistanceFrost = 245,
  AugmentationResistanceLightning = 246,
  RaresTierOneLogin = 247,
  RaresTierTwoLogin = 248,
  RaresTierThreeLogin = 249,
  RaresTierFourLogin = 250,
  RaresTierFiveLogin = 251,
  RaresLoginTimestamp = 252,
  RaresTierSix = 253,
  RaresTierSeven = 254,
  RaresTierSixLogin = 255,
  RaresTierSevenLogin = 256,
  ItemAttributeLimit = 257,
  ItemAttributeLevelLimit = 258,
  ItemAttribute2ndLimit = 259,
  ItemAttribute2ndLevelLimit = 260,
  CharacterTitleId = 261,
  NumCharacterTitles = 262,
  ResistanceModifierType = 263,
  FreeTinkersBitfield = 264,
  EquipmentSetId = 265,
  PetClass = 266,
  Lifespan = 267,
  RemainingLifespan = 268,
  UseCreateQuantity = 269,
  WieldRequirements2 = 270,
  WieldSkillType2 = 271,
  WieldDifficulty2 = 272,
  WieldRequirements3 = 273,
  WieldSkillType3 = 274,
  WieldDifficulty3 = 275,
  WieldRequirements4 = 276,
  WieldSkillType4 = 277,
  WieldDifficulty4 = 278,
  Unique = 279,
  SharedCooldown = 280,
  Faction1Bits = 281,
  Faction2Bits = 282,
  Faction3Bits = 283,
  Hatred1Bits = 284,
  Hatred2Bits = 285,
  Hatred3Bits = 286,
  SocietyRankCelhan = 287,
  SocietyRankEldweb = 288,
  SocietyRankRadblo = 289,
  HearLocalSignals = 290,
  HearLocalSignalsRadius = 291,
  Cleaving = 292,
  AugmentationSpecializeGearcraft = 293,
  AugmentationInfusedCreatureMagic = 294,
  AugmentationInfusedItemMagic = 295,
  AugmentationInfusedLifeMagic = 296,
  AugmentationInfusedWarMagic = 297,
  AugmentationCriticalExpertise = 298,
  AugmentationCriticalPower = 299,
  AugmentationSkilledMelee = 300,
  AugmentationSkilledMissile = 301,
  AugmentationSkilledMagic = 302,
  ImbuedEffect2 = 303,
  ImbuedEffect3 = 304,
  ImbuedEffect4 = 305,
  ImbuedEffect5 = 306,
  DamageRating = 307,
  DamageResistRating = 308,
  AugmentationDamageBonus = 309,
  AugmentationDamageReduction = 310,
  ImbueStackingBits = 311,
  HealOverTime = 312,
  CritRating = 313,
  CritDamageRating = 314,
  CritResistRating = 315,
  CritDamageResistRating = 316,
  HealingResistRating = 317,
  DamageOverTime = 318,
  ItemMaxLevel = 319,
  ItemXpStyle = 320,
  EquipmentSetExtra = 321,
  AetheriaBitfield = 322,
  HealingBoostRating = 323,
  HeritageSpecificArmor = 324,
  AlternateRacialSkills = 325,
  AugmentationJackOfAllTrades = 326,
  AugmentationResistanceNether = 327,
  AugmentationInfusedVoidMagic = 328,
  WeaknessRating = 329,
  NetherOverTime = 330,
  NetherResistRating = 331,
  LuminanceAward = 332,
  LumAugDamageRating = 333,
  LumAugDamageReductionRating = 334,
  LumAugCritDamageRating = 335,
  LumAugCritReductionRating = 336,
  LumAugSurgeEffectRating = 337,
  LumAugSurgeChanceRating = 338,
  LumAugItemManaUsage = 339,
  LumAugItemManaGain = 340,
  LumAugVitality = 341,
  LumAugHealingRating = 342,
  LumAugSkilledCraft = 343,
  LumAugSkilledSpec = 344,
  LumAugNoDestroyCraft = 345,
  RestrictInteraction = 346,
  OlthoiLootTimestamp = 347,
  OlthoiLootStep = 348,
  UseCreatesContractId = 349,
  DotResistRating = 350,
  LifeResistRating = 351,
  CloakWeaveProc = 352,
  WeaponType = 353,
  MeleeMastery = 354,
  RangedMastery = 355,
  SneakAttackRating = 356,
  RecklessnessRating = 357,
  DeceptionRating = 358,
  CombatPetRange = 359,
  WeaponAuraDamage = 360,
  WeaponAuraSpeed = 361,
  SummoningMastery = 362,
  HeartbeatLifespan = 363,
  UseLevelRequirement = 364,
  LumAugAllSkills = 365,
  UseRequiresSkill = 366,
  UseRequiresSkillLevel = 367,
  UseRequiresSkillSpec = 368,
  UseRequiresLevel = 369,
  GearDamage = 370,
  GearDamageResist = 371,
  GearCrit = 372,
  GearCritResist = 373,
  GearCritDamage = 374,
  GearCritDamageResist = 375,
  GearHealingBoost = 376,
  GearNetherResist = 377,
  GearLifeResist = 378,
  GearMaxHealth = 379,
  Unknown380 = 380,
  PKDamageRating = 381,
  PKDamageResistRating = 382,
  GearPKDamageRating = 383,
  GearPKDamageResistRating = 384,
  Unknown385 = 385,
  Overpower = 386,
  OverpowerResist = 387,
  GearOverpower = 388,
  GearOverpowerResist = 389,
  Enlightenment = 390,
  PCAPRecordedAutonomousMovement = 8007,
  PCAPRecordedMaxVelocityEstimated = 8030,
  PCAPRecordedPlacement = 8041,
  PCAPRecordedAppraisalPages = 8042,
  PCAPRecordedAppraisalMaxPages = 8043,
  CurrentLoyaltyAtLastLogoff = 9008,
  CurrentLeadershipAtLastLogoff = 9009,
  AllegianceOfficerRank = 9010,
  HouseRentTimestamp = 9011,
  Hairstyle = 9012,
  VisualClothingPriority = 9013,
  SquelchGlobal = 9014,
  InventoryOrder = 9015,
}

export const PropertyIntName: StringIndexedDict<string> = {
  [PropertyInt.Undef]: "Undef",
  [PropertyInt.ItemType]: "ItemType",
  [PropertyInt.CreatureType]: "CreatureType",
  [PropertyInt.PaletteTemplate]: "PaletteTemplate",
  [PropertyInt.ClothingPriority]: "ClothingPriority",
  [PropertyInt.EncumbranceVal]: "EncumbranceVal",
  [PropertyInt.ItemsCapacity]: "ItemsCapacity",
  [PropertyInt.ContainersCapacity]: "ContainersCapacity",
  [PropertyInt.Mass]: "Mass",
  [PropertyInt.ValidLocations]: "ValidLocations",
  [PropertyInt.CurrentWieldedLocation]: "CurrentWieldedLocation",
  [PropertyInt.MaxStackSize]: "MaxStackSize",
  [PropertyInt.StackSize]: "StackSize",
  [PropertyInt.StackUnitEncumbrance]: "StackUnitEncumbrance",
  [PropertyInt.StackUnitMass]: "StackUnitMass",
  [PropertyInt.StackUnitValue]: "StackUnitValue",
  [PropertyInt.ItemUseable]: "ItemUseable",
  [PropertyInt.RareId]: "RareId",
  [PropertyInt.UiEffects]: "UiEffects",
  [PropertyInt.Value]: "Value",
  [PropertyInt.CoinValue]: "CoinValue",
  [PropertyInt.TotalExperience]: "TotalExperience",
  [PropertyInt.AvailableCharacter]: "AvailableCharacter",
  [PropertyInt.TotalSkillCredits]: "TotalSkillCredits",
  [PropertyInt.AvailableSkillCredits]: "AvailableSkillCredits",
  [PropertyInt.Level]: "Level",
  [PropertyInt.AccountRequirements]: "AccountRequirements",
  [PropertyInt.ArmorType]: "ArmorType",
  [PropertyInt.ArmorLevel]: "ArmorLevel",
  [PropertyInt.AllegianceCpPool]: "AllegianceCpPool",
  [PropertyInt.AllegianceRank]: "AllegianceRank",
  [PropertyInt.ChannelsAllowed]: "ChannelsAllowed",
  [PropertyInt.ChannelsActive]: "ChannelsActive",
  [PropertyInt.Bonded]: "Bonded",
  [PropertyInt.MonarchsRank]: "MonarchsRank",
  [PropertyInt.AllegianceFollowers]: "AllegianceFollowers",
  [PropertyInt.ResistMagic]: "ResistMagic",
  [PropertyInt.ResistItemAppraisal]: "ResistItemAppraisal",
  [PropertyInt.ResistLockpick]: "ResistLockpick",
  [PropertyInt.DeprecatedResistRepair]: "DeprecatedResistRepair",
  [PropertyInt.CombatMode]: "CombatMode",
  [PropertyInt.CurrentAttackHeight]: "CurrentAttackHeight",
  [PropertyInt.CombatCollisions]: "CombatCollisions",
  [PropertyInt.NumDeaths]: "NumDeaths",
  [PropertyInt.Damage]: "Damage",
  [PropertyInt.DamageType]: "DamageType",
  [PropertyInt.DefaultCombatStyle]: "DefaultCombatStyle",
  [PropertyInt.AttackType]: "AttackType",
  [PropertyInt.WeaponSkill]: "WeaponSkill",
  [PropertyInt.WeaponTime]: "WeaponTime",
  [PropertyInt.AmmoType]: "AmmoType",
  [PropertyInt.CombatUse]: "CombatUse",
  [PropertyInt.ParentLocation]: "ParentLocation",
  [PropertyInt.PlacementPosition]: "PlacementPosition",
  [PropertyInt.WeaponEncumbrance]: "WeaponEncumbrance",
  [PropertyInt.WeaponMass]: "WeaponMass",
  [PropertyInt.ShieldValue]: "ShieldValue",
  [PropertyInt.ShieldEncumbrance]: "ShieldEncumbrance",
  [PropertyInt.MissileInventoryLocation]: "MissileInventoryLocation",
  [PropertyInt.FullDamageType]: "FullDamageType",
  [PropertyInt.WeaponRange]: "WeaponRange",
  [PropertyInt.AttackersSkill]: "AttackersSkill",
  [PropertyInt.DefendersSkill]: "DefendersSkill",
  [PropertyInt.AttackersSkillValue]: "AttackersSkillValue",
  [PropertyInt.AttackersClass]: "AttackersClass",
  [PropertyInt.Placement]: "Placement",
  [PropertyInt.CheckpointStatus]: "CheckpointStatus",
  [PropertyInt.Tolerance]: "Tolerance",
  [PropertyInt.TargetingTactic]: "TargetingTactic",
  [PropertyInt.CombatTactic]: "CombatTactic",
  [PropertyInt.HomesickTargetingTactic]: "HomesickTargetingTactic",
  [PropertyInt.NumFollowFailures]: "NumFollowFailures",
  [PropertyInt.FriendType]: "FriendType",
  [PropertyInt.FoeType]: "FoeType",
  [PropertyInt.MerchandiseItemTypes]: "MerchandiseItemTypes",
  [PropertyInt.MerchandiseMinValue]: "MerchandiseMinValue",
  [PropertyInt.MerchandiseMaxValue]: "MerchandiseMaxValue",
  [PropertyInt.NumItemsSold]: "NumItemsSold",
  [PropertyInt.NumItemsBought]: "NumItemsBought",
  [PropertyInt.MoneyIncome]: "MoneyIncome",
  [PropertyInt.MoneyOutflow]: "MoneyOutflow",
  [PropertyInt.MaxGeneratedObjects]: "MaxGeneratedObjects",
  [PropertyInt.InitGeneratedObjects]: "InitGeneratedObjects",
  [PropertyInt.ActivationResponse]: "ActivationResponse",
  [PropertyInt.OriginalValue]: "OriginalValue",
  [PropertyInt.NumMoveFailures]: "NumMoveFailures",
  [PropertyInt.MinLevel]: "MinLevel",
  [PropertyInt.MaxLevel]: "MaxLevel",
  [PropertyInt.LockpickMod]: "LockpickMod",
  [PropertyInt.BoosterEnum]: "BoosterEnum",
  [PropertyInt.BoostValue]: "BoostValue",
  [PropertyInt.MaxStructure]: "MaxStructure",
  [PropertyInt.Structure]: "Structure",
  [PropertyInt.PhysicsState]: "PhysicsState",
  [PropertyInt.TargetType]: "TargetType",
  [PropertyInt.RadarBlipColor]: "RadarBlipColor",
  [PropertyInt.EncumbranceCapacity]: "EncumbranceCapacity",
  [PropertyInt.LoginTimestamp]: "LoginTimestamp",
  [PropertyInt.CreationTimestamp]: "CreationTimestamp",
  [PropertyInt.PkLevelModifier]: "PkLevelModifier",
  [PropertyInt.GeneratorType]: "GeneratorType",
  [PropertyInt.AiAllowedCombatStyle]: "AiAllowedCombatStyle",
  [PropertyInt.LogoffTimestamp]: "LogoffTimestamp",
  [PropertyInt.GeneratorDestructionType]: "GeneratorDestructionType",
  [PropertyInt.ActivationCreateClass]: "ActivationCreateClass",
  [PropertyInt.ItemWorkmanship]: "ItemWorkmanship",
  [PropertyInt.ItemSpellcraft]: "ItemSpellcraft",
  [PropertyInt.ItemCurMana]: "ItemCurMana",
  [PropertyInt.ItemMaxMana]: "ItemMaxMana",
  [PropertyInt.ItemDifficulty]: "ItemDifficulty",
  [PropertyInt.ItemAllegianceRankLimit]: "ItemAllegianceRankLimit",
  [PropertyInt.PortalBitmask]: "PortalBitmask",
  [PropertyInt.AdvocateLevel]: "AdvocateLevel",
  [PropertyInt.Gender]: "Gender",
  [PropertyInt.Attuned]: "Attuned",
  [PropertyInt.ItemSkillLevelLimit]: "ItemSkillLevelLimit",
  [PropertyInt.GateLogic]: "GateLogic",
  [PropertyInt.ItemManaCost]: "ItemManaCost",
  [PropertyInt.Logoff]: "Logoff",
  [PropertyInt.Active]: "Active",
  [PropertyInt.AttackHeight]: "AttackHeight",
  [PropertyInt.NumAttackFailures]: "NumAttackFailures",
  [PropertyInt.AiCpThreshold]: "AiCpThreshold",
  [PropertyInt.AiAdvancementStrategy]: "AiAdvancementStrategy",
  [PropertyInt.Version]: "Version",
  [PropertyInt.Age]: "Age",
  [PropertyInt.VendorHappyMean]: "VendorHappyMean",
  [PropertyInt.VendorHappyVariance]: "VendorHappyVariance",
  [PropertyInt.CloakStatus]: "CloakStatus",
  [PropertyInt.VitaeCpPool]: "VitaeCpPool",
  [PropertyInt.NumServicesSold]: "NumServicesSold",
  [PropertyInt.MaterialType]: "MaterialType",
  [PropertyInt.NumAllegianceBreaks]: "NumAllegianceBreaks",
  [PropertyInt.ShowableOnRadar]: "ShowableOnRadar",
  [PropertyInt.PlayerKillerStatus]: "PlayerKillerStatus",
  [PropertyInt.VendorHappyMaxItems]: "VendorHappyMaxItems",
  [PropertyInt.ScorePageNum]: "ScorePageNum",
  [PropertyInt.ScoreConfigNum]: "ScoreConfigNum",
  [PropertyInt.ScoreNumScores]: "ScoreNumScores",
  [PropertyInt.DeathLevel]: "DeathLevel",
  [PropertyInt.AiOptions]: "AiOptions",
  [PropertyInt.OpenToEveryone]: "OpenToEveryone",
  [PropertyInt.GeneratorTimeType]: "GeneratorTimeType",
  [PropertyInt.GeneratorStartTime]: "GeneratorStartTime",
  [PropertyInt.GeneratorEndTime]: "GeneratorEndTime",
  [PropertyInt.GeneratorEndDestructionType]: "GeneratorEndDestructionType",
  [PropertyInt.XpOverride]: "XpOverride",
  [PropertyInt.NumCrashAndTurns]: "NumCrashAndTurns",
  [PropertyInt.ComponentWarningThreshold]: "ComponentWarningThreshold",
  [PropertyInt.HouseStatus]: "HouseStatus",
  [PropertyInt.HookPlacement]: "HookPlacement",
  [PropertyInt.HookType]: "HookType",
  [PropertyInt.HookItemType]: "HookItemType",
  [PropertyInt.AiPpThreshold]: "AiPpThreshold",
  [PropertyInt.GeneratorVersion]: "GeneratorVersion",
  [PropertyInt.HouseType]: "HouseType",
  [PropertyInt.PickupEmoteOffset]: "PickupEmoteOffset",
  [PropertyInt.WeenieIteration]: "WeenieIteration",
  [PropertyInt.WieldRequirements]: "WieldRequirements",
  [PropertyInt.WieldSkillType]: "WieldSkillType",
  [PropertyInt.WieldDifficulty]: "WieldDifficulty",
  [PropertyInt.HouseMaxHooksUsable]: "HouseMaxHooksUsable",
  [PropertyInt.HouseCurrentHooksUsable]: "HouseCurrentHooksUsable",
  [PropertyInt.AllegianceMinLevel]: "AllegianceMinLevel",
  [PropertyInt.AllegianceMaxLevel]: "AllegianceMaxLevel",
  [PropertyInt.HouseRelinkHookCount]: "HouseRelinkHookCount",
  [PropertyInt.SlayerCreatureType]: "SlayerCreatureType",
  [PropertyInt.ConfirmationInProgress]: "ConfirmationInProgress",
  [PropertyInt.ConfirmationTypeInProgress]: "ConfirmationTypeInProgress",
  [PropertyInt.TsysMutationData]: "TsysMutationData",
  [PropertyInt.NumItemsInMaterial]: "NumItemsInMaterial",
  [PropertyInt.NumTimesTinkered]: "NumTimesTinkered",
  [PropertyInt.AppraisalLongDescDecoration]: "AppraisalLongDescDecoration",
  [PropertyInt.AppraisalLockpickSuccessPercent]: "AppraisalLockpickSuccessPercent",
  [PropertyInt.AppraisalPages]: "AppraisalPages",
  [PropertyInt.AppraisalMaxPages]: "AppraisalMaxPages",
  [PropertyInt.AppraisalItemSkill]: "AppraisalItemSkill",
  [PropertyInt.GemCount]: "GemCount",
  [PropertyInt.GemType]: "GemType",
  [PropertyInt.ImbuedEffect]: "ImbuedEffect",
  [PropertyInt.AttackersRawSkillValue]: "AttackersRawSkillValue",
  [PropertyInt.ChessRank]: "ChessRank",
  [PropertyInt.ChessTotalGames]: "ChessTotalGames",
  [PropertyInt.ChessGamesWon]: "ChessGamesWon",
  [PropertyInt.ChessGamesLost]: "ChessGamesLost",
  [PropertyInt.TypeOfAlteration]: "TypeOfAlteration",
  [PropertyInt.SkillToBeAltered]: "SkillToBeAltered",
  [PropertyInt.SkillAlterationCount]: "SkillAlterationCount",
  [PropertyInt.HeritageGroup]: "HeritageGroup",
  [PropertyInt.TransferFromAttribute]: "TransferFromAttribute",
  [PropertyInt.TransferToAttribute]: "TransferToAttribute",
  [PropertyInt.AttributeTransferCount]: "AttributeTransferCount",
  [PropertyInt.FakeFishingSkill]: "FakeFishingSkill",
  [PropertyInt.NumKeys]: "NumKeys",
  [PropertyInt.DeathTimestamp]: "DeathTimestamp",
  [PropertyInt.PkTimestamp]: "PkTimestamp",
  [PropertyInt.VictimTimestamp]: "VictimTimestamp",
  [PropertyInt.HookGroup]: "HookGroup",
  [PropertyInt.AllegianceSwearTimestamp]: "AllegianceSwearTimestamp",
  [PropertyInt.HousePurchaseTimestamp]: "HousePurchaseTimestamp",
  [PropertyInt.RedirectableEquippedArmorCount]: "RedirectableEquippedArmorCount",
  [PropertyInt.MeleeDefenseImbuedEffectTypeCache]: "MeleeDefenseImbuedEffectTypeCache",
  [PropertyInt.MissileDefenseImbuedEffectTypeCache]: "MissileDefenseImbuedEffectTypeCache",
  [PropertyInt.MagicDefenseImbuedEffectTypeCache]: "MagicDefenseImbuedEffectTypeCache",
  [PropertyInt.ElementalDamageBonus]: "ElementalDamageBonus",
  [PropertyInt.ImbueAttempts]: "ImbueAttempts",
  [PropertyInt.ImbueSuccesses]: "ImbueSuccesses",
  [PropertyInt.CreatureKills]: "CreatureKills",
  [PropertyInt.PlayerKillsPk]: "PlayerKillsPk",
  [PropertyInt.PlayerKillsPkl]: "PlayerKillsPkl",
  [PropertyInt.RaresTierOne]: "RaresTierOne",
  [PropertyInt.RaresTierTwo]: "RaresTierTwo",
  [PropertyInt.RaresTierThree]: "RaresTierThree",
  [PropertyInt.RaresTierFour]: "RaresTierFour",
  [PropertyInt.RaresTierFive]: "RaresTierFive",
  [PropertyInt.AugmentationStat]: "AugmentationStat",
  [PropertyInt.AugmentationFamilyStat]: "AugmentationFamilyStat",
  [PropertyInt.AugmentationInnateFamily]: "AugmentationInnateFamily",
  [PropertyInt.AugmentationInnateStrength]: "AugmentationInnateStrength",
  [PropertyInt.AugmentationInnateEndurance]: "AugmentationInnateEndurance",
  [PropertyInt.AugmentationInnateCoordination]: "AugmentationInnateCoordination",
  [PropertyInt.AugmentationInnateQuickness]: "AugmentationInnateQuickness",
  [PropertyInt.AugmentationInnateFocus]: "AugmentationInnateFocus",
  [PropertyInt.AugmentationInnateSelf]: "AugmentationInnateSelf",
  [PropertyInt.AugmentationSpecializeSalvaging]: "AugmentationSpecializeSalvaging",
  [PropertyInt.AugmentationSpecializeItemTinkering]: "AugmentationSpecializeItemTinkering",
  [PropertyInt.AugmentationSpecializeArmorTinkering]: "AugmentationSpecializeArmorTinkering",
  [PropertyInt.AugmentationSpecializeMagicItemTinkering]: "AugmentationSpecializeMagicItemTinkering",
  [PropertyInt.AugmentationSpecializeWeaponTinkering]: "AugmentationSpecializeWeaponTinkering",
  [PropertyInt.AugmentationExtraPackSlot]: "AugmentationExtraPackSlot",
  [PropertyInt.AugmentationIncreasedCarryingCapacity]: "AugmentationIncreasedCarryingCapacity",
  [PropertyInt.AugmentationLessDeathItemLoss]: "AugmentationLessDeathItemLoss",
  [PropertyInt.AugmentationSpellsRemainPastDeath]: "AugmentationSpellsRemainPastDeath",
  [PropertyInt.AugmentationCriticalDefense]: "AugmentationCriticalDefense",
  [PropertyInt.AugmentationBonusXp]: "AugmentationBonusXp",
  [PropertyInt.AugmentationBonusSalvage]: "AugmentationBonusSalvage",
  [PropertyInt.AugmentationBonusImbueChance]: "AugmentationBonusImbueChance",
  [PropertyInt.AugmentationFasterRegen]: "AugmentationFasterRegen",
  [PropertyInt.AugmentationIncreasedSpellDuration]: "AugmentationIncreasedSpellDuration",
  [PropertyInt.AugmentationResistanceFamily]: "AugmentationResistanceFamily",
  [PropertyInt.AugmentationResistanceSlash]: "AugmentationResistanceSlash",
  [PropertyInt.AugmentationResistancePierce]: "AugmentationResistancePierce",
  [PropertyInt.AugmentationResistanceBlunt]: "AugmentationResistanceBlunt",
  [PropertyInt.AugmentationResistanceAcid]: "AugmentationResistanceAcid",
  [PropertyInt.AugmentationResistanceFire]: "AugmentationResistanceFire",
  [PropertyInt.AugmentationResistanceFrost]: "AugmentationResistanceFrost",
  [PropertyInt.AugmentationResistanceLightning]: "AugmentationResistanceLightning",
  [PropertyInt.RaresTierOneLogin]: "RaresTierOneLogin",
  [PropertyInt.RaresTierTwoLogin]: "RaresTierTwoLogin",
  [PropertyInt.RaresTierThreeLogin]: "RaresTierThreeLogin",
  [PropertyInt.RaresTierFourLogin]: "RaresTierFourLogin",
  [PropertyInt.RaresTierFiveLogin]: "RaresTierFiveLogin",
  [PropertyInt.RaresLoginTimestamp]: "RaresLoginTimestamp",
  [PropertyInt.RaresTierSix]: "RaresTierSix",
  [PropertyInt.RaresTierSeven]: "RaresTierSeven",
  [PropertyInt.RaresTierSixLogin]: "RaresTierSixLogin",
  [PropertyInt.RaresTierSevenLogin]: "RaresTierSevenLogin",
  [PropertyInt.ItemAttributeLimit]: "ItemAttributeLimit",
  [PropertyInt.ItemAttributeLevelLimit]: "ItemAttributeLevelLimit",
  [PropertyInt.ItemAttribute2ndLimit]: "ItemAttribute2ndLimit",
  [PropertyInt.ItemAttribute2ndLevelLimit]: "ItemAttribute2ndLevelLimit",
  [PropertyInt.CharacterTitleId]: "CharacterTitleId",
  [PropertyInt.NumCharacterTitles]: "NumCharacterTitles",
  [PropertyInt.ResistanceModifierType]: "ResistanceModifierType",
  [PropertyInt.FreeTinkersBitfield]: "FreeTinkersBitfield",
  [PropertyInt.EquipmentSetId]: "EquipmentSetId",
  [PropertyInt.PetClass]: "PetClass",
  [PropertyInt.Lifespan]: "Lifespan",
  [PropertyInt.RemainingLifespan]: "RemainingLifespan",
  [PropertyInt.UseCreateQuantity]: "UseCreateQuantity",
  [PropertyInt.WieldRequirements2]: "WieldRequirements2",
  [PropertyInt.WieldSkillType2]: "WieldSkillType2",
  [PropertyInt.WieldDifficulty2]: "WieldDifficulty2",
  [PropertyInt.WieldRequirements3]: "WieldRequirements3",
  [PropertyInt.WieldSkillType3]: "WieldSkillType3",
  [PropertyInt.WieldDifficulty3]: "WieldDifficulty3",
  [PropertyInt.WieldRequirements4]: "WieldRequirements4",
  [PropertyInt.WieldSkillType4]: "WieldSkillType4",
  [PropertyInt.WieldDifficulty4]: "WieldDifficulty4",
  [PropertyInt.Unique]: "Unique",
  [PropertyInt.SharedCooldown]: "SharedCooldown",
  [PropertyInt.Faction1Bits]: "Faction1Bits",
  [PropertyInt.Faction2Bits]: "Faction2Bits",
  [PropertyInt.Faction3Bits]: "Faction3Bits",
  [PropertyInt.Hatred1Bits]: "Hatred1Bits",
  [PropertyInt.Hatred2Bits]: "Hatred2Bits",
  [PropertyInt.Hatred3Bits]: "Hatred3Bits",
  [PropertyInt.SocietyRankCelhan]: "SocietyRankCelhan",
  [PropertyInt.SocietyRankEldweb]: "SocietyRankEldweb",
  [PropertyInt.SocietyRankRadblo]: "SocietyRankRadblo",
  [PropertyInt.HearLocalSignals]: "HearLocalSignals",
  [PropertyInt.HearLocalSignalsRadius]: "HearLocalSignalsRadius",
  [PropertyInt.Cleaving]: "Cleaving",
  [PropertyInt.AugmentationSpecializeGearcraft]: "AugmentationSpecializeGearcraft",
  [PropertyInt.AugmentationInfusedCreatureMagic]: "AugmentationInfusedCreatureMagic",
  [PropertyInt.AugmentationInfusedItemMagic]: "AugmentationInfusedItemMagic",
  [PropertyInt.AugmentationInfusedLifeMagic]: "AugmentationInfusedLifeMagic",
  [PropertyInt.AugmentationInfusedWarMagic]: "AugmentationInfusedWarMagic",
  [PropertyInt.AugmentationCriticalExpertise]: "AugmentationCriticalExpertise",
  [PropertyInt.AugmentationCriticalPower]: "AugmentationCriticalPower",
  [PropertyInt.AugmentationSkilledMelee]: "AugmentationSkilledMelee",
  [PropertyInt.AugmentationSkilledMissile]: "AugmentationSkilledMissile",
  [PropertyInt.AugmentationSkilledMagic]: "AugmentationSkilledMagic",
  [PropertyInt.ImbuedEffect2]: "ImbuedEffect2",
  [PropertyInt.ImbuedEffect3]: "ImbuedEffect3",
  [PropertyInt.ImbuedEffect4]: "ImbuedEffect4",
  [PropertyInt.ImbuedEffect5]: "ImbuedEffect5",
  [PropertyInt.DamageRating]: "DamageRating",
  [PropertyInt.DamageResistRating]: "DamageResistRating",
  [PropertyInt.AugmentationDamageBonus]: "AugmentationDamageBonus",
  [PropertyInt.AugmentationDamageReduction]: "AugmentationDamageReduction",
  [PropertyInt.ImbueStackingBits]: "ImbueStackingBits",
  [PropertyInt.HealOverTime]: "HealOverTime",
  [PropertyInt.CritRating]: "CritRating",
  [PropertyInt.CritDamageRating]: "CritDamageRating",
  [PropertyInt.CritResistRating]: "CritResistRating",
  [PropertyInt.CritDamageResistRating]: "CritDamageResistRating",
  [PropertyInt.HealingResistRating]: "HealingResistRating",
  [PropertyInt.DamageOverTime]: "DamageOverTime",
  [PropertyInt.ItemMaxLevel]: "ItemMaxLevel",
  [PropertyInt.ItemXpStyle]: "ItemXpStyle",
  [PropertyInt.EquipmentSetExtra]: "EquipmentSetExtra",
  [PropertyInt.AetheriaBitfield]: "AetheriaBitfield",
  [PropertyInt.HealingBoostRating]: "HealingBoostRating",
  [PropertyInt.HeritageSpecificArmor]: "HeritageSpecificArmor",
  [PropertyInt.AlternateRacialSkills]: "AlternateRacialSkills",
  [PropertyInt.AugmentationJackOfAllTrades]: "AugmentationJackOfAllTrades",
  [PropertyInt.AugmentationResistanceNether]: "AugmentationResistanceNether",
  [PropertyInt.AugmentationInfusedVoidMagic]: "AugmentationInfusedVoidMagic",
  [PropertyInt.WeaknessRating]: "WeaknessRating",
  [PropertyInt.NetherOverTime]: "NetherOverTime",
  [PropertyInt.NetherResistRating]: "NetherResistRating",
  [PropertyInt.LuminanceAward]: "LuminanceAward",
  [PropertyInt.LumAugDamageRating]: "LumAugDamageRating",
  [PropertyInt.LumAugDamageReductionRating]: "LumAugDamageReductionRating",
  [PropertyInt.LumAugCritDamageRating]: "LumAugCritDamageRating",
  [PropertyInt.LumAugCritReductionRating]: "LumAugCritReductionRating",
  [PropertyInt.LumAugSurgeEffectRating]: "LumAugSurgeEffectRating",
  [PropertyInt.LumAugSurgeChanceRating]: "LumAugSurgeChanceRating",
  [PropertyInt.LumAugItemManaUsage]: "LumAugItemManaUsage",
  [PropertyInt.LumAugItemManaGain]: "LumAugItemManaGain",
  [PropertyInt.LumAugVitality]: "LumAugVitality",
  [PropertyInt.LumAugHealingRating]: "LumAugHealingRating",
  [PropertyInt.LumAugSkilledCraft]: "LumAugSkilledCraft",
  [PropertyInt.LumAugSkilledSpec]: "LumAugSkilledSpec",
  [PropertyInt.LumAugNoDestroyCraft]: "LumAugNoDestroyCraft",
  [PropertyInt.RestrictInteraction]: "RestrictInteraction",
  [PropertyInt.OlthoiLootTimestamp]: "OlthoiLootTimestamp",
  [PropertyInt.OlthoiLootStep]: "OlthoiLootStep",
  [PropertyInt.UseCreatesContractId]: "UseCreatesContractId",
  [PropertyInt.DotResistRating]: "DotResistRating",
  [PropertyInt.LifeResistRating]: "LifeResistRating",
  [PropertyInt.CloakWeaveProc]: "CloakWeaveProc",
  [PropertyInt.WeaponType]: "WeaponType",
  [PropertyInt.MeleeMastery]: "MeleeMastery",
  [PropertyInt.RangedMastery]: "RangedMastery",
  [PropertyInt.SneakAttackRating]: "SneakAttackRating",
  [PropertyInt.RecklessnessRating]: "RecklessnessRating",
  [PropertyInt.DeceptionRating]: "DeceptionRating",
  [PropertyInt.CombatPetRange]: "CombatPetRange",
  [PropertyInt.WeaponAuraDamage]: "WeaponAuraDamage",
  [PropertyInt.WeaponAuraSpeed]: "WeaponAuraSpeed",
  [PropertyInt.SummoningMastery]: "SummoningMastery",
  [PropertyInt.HeartbeatLifespan]: "HeartbeatLifespan",
  [PropertyInt.UseLevelRequirement]: "UseLevelRequirement",
  [PropertyInt.LumAugAllSkills]: "LumAugAllSkills",
  [PropertyInt.UseRequiresSkill]: "UseRequiresSkill",
  [PropertyInt.UseRequiresSkillLevel]: "UseRequiresSkillLevel",
  [PropertyInt.UseRequiresSkillSpec]: "UseRequiresSkillSpec",
  [PropertyInt.UseRequiresLevel]: "UseRequiresLevel",
  [PropertyInt.GearDamage]: "GearDamage",
  [PropertyInt.GearDamageResist]: "GearDamageResist",
  [PropertyInt.GearCrit]: "GearCrit",
  [PropertyInt.GearCritResist]: "GearCritResist",
  [PropertyInt.GearCritDamage]: "GearCritDamage",
  [PropertyInt.GearCritDamageResist]: "GearCritDamageResist",
  [PropertyInt.GearHealingBoost]: "GearHealingBoost",
  [PropertyInt.GearNetherResist]: "GearNetherResist",
  [PropertyInt.GearLifeResist]: "GearLifeResist",
  [PropertyInt.GearMaxHealth]: "GearMaxHealth",
  [PropertyInt.Unknown380]: "Unknown380",
  [PropertyInt.PKDamageRating]: "PKDamageRating",
  [PropertyInt.PKDamageResistRating]: "PKDamageResistRating",
  [PropertyInt.GearPKDamageRating]: "GearPKDamageRating",
  [PropertyInt.GearPKDamageResistRating]: "GearPKDamageResistRating",
  [PropertyInt.Unknown385]: "Unknown385",
  [PropertyInt.Overpower]: "Overpower",
  [PropertyInt.OverpowerResist]: "OverpowerResist",
  [PropertyInt.GearOverpower]: "GearOverpower",
  [PropertyInt.GearOverpowerResist]: "GearOverpowerResist",
  [PropertyInt.Enlightenment]: "Enlightenment",
  [PropertyInt.PCAPRecordedAutonomousMovement]: "PCAPRecordedAutonomousMovement",
  [PropertyInt.PCAPRecordedMaxVelocityEstimated]: "PCAPRecordedMaxVelocityEstimated",
  [PropertyInt.PCAPRecordedPlacement]: "PCAPRecordedPlacement",
  [PropertyInt.PCAPRecordedAppraisalPages]: "PCAPRecordedAppraisalPages",
  [PropertyInt.PCAPRecordedAppraisalMaxPages]: "PCAPRecordedAppraisalMaxPages",
  [PropertyInt.CurrentLoyaltyAtLastLogoff]: "CurrentLoyaltyAtLastLogoff",
  [PropertyInt.CurrentLeadershipAtLastLogoff]: "CurrentLeadershipAtLastLogoff",
  [PropertyInt.AllegianceOfficerRank]: "AllegianceOfficerRank",
  [PropertyInt.HouseRentTimestamp]: "HouseRentTimestamp",
  [PropertyInt.Hairstyle]: "Hairstyle",
  [PropertyInt.VisualClothingPriority]: "VisualClothingPriority",
  [PropertyInt.SquelchGlobal]: "SquelchGlobal",
  [PropertyInt.InventoryOrder]: "InventoryOrder",
}

// ACE::PropertyFloat.cs
export enum PropertyFloat {
  Undef = 0,
  HeartbeatInterval = 1,
  HeartbeatTimestamp = 2,
  HealthRate = 3,
  StaminaRate = 4,
  ManaRate = 5,
  HealthUponResurrection = 6,
  StaminaUponResurrection = 7,
  ManaUponResurrection = 8,
  StartTime = 9,
  StopTime = 10,
  ResetInterval = 11,
  Shade = 12,
  ArmorModVsSlash = 13,
  ArmorModVsPierce = 14,
  ArmorModVsBludgeon = 15,
  ArmorModVsCold = 16,
  ArmorModVsFire = 17,
  ArmorModVsAcid = 18,
  ArmorModVsElectric = 19,
  CombatSpeed = 20,
  WeaponLength = 21,
  DamageVariance = 22,
  CurrentPowerMod = 23,
  AccuracyMod = 24,
  StrengthMod = 25,
  MaximumVelocity = 26,
  RotationSpeed = 27,
  MotionTimestamp = 28,
  WeaponDefense = 29,
  WimpyLevel = 30,
  VisualAwarenessRange = 31,
  AuralAwarenessRange = 32,
  PerceptionLevel = 33,
  PowerupTime = 34,
  MaxChargeDistance = 35,
  ChargeSpeed = 36,
  BuyPrice = 37,
  SellPrice = 38,
  DefaultScale = 39,
  LockpickMod = 40,
  RegenerationInterval = 41,
  RegenerationTimestamp = 42,
  GeneratorRadius = 43,
  TimeToRot = 44,
  DeathTimestamp = 45,
  PkTimestamp = 46,
  VictimTimestamp = 47,
  LoginTimestamp = 48,
  CreationTimestamp = 49,
  MinimumTimeSincePk = 50,
  DeprecatedHousekeepingPriority = 51,
  AbuseLoggingTimestamp = 52,
  LastPortalTeleportTimestamp = 53,
  UseRadius = 54,
  HomeRadius = 55,
  ReleasedTimestamp = 56,
  MinHomeRadius = 57,
  Facing = 58,
  ResetTimestamp = 59,
  LogoffTimestamp = 60,
  EconRecoveryInterval = 61,
  WeaponOffense = 62,
  DamageMod = 63,
  ResistSlash = 64,
  ResistPierce = 65,
  ResistBludgeon = 66,
  ResistFire = 67,
  ResistCold = 68,
  ResistAcid = 69,
  ResistElectric = 70,
  ResistHealthBoost = 71,
  ResistStaminaDrain = 72,
  ResistStaminaBoost = 73,
  ResistManaDrain = 74,
  ResistManaBoost = 75,
  Translucency = 76,
  PhysicsScriptIntensity = 77,
  Friction = 78,
  Elasticity = 79,
  AiUseMagicDelay = 80,
  ItemMinSpellcraftMod = 81,
  ItemMaxSpellcraftMod = 82,
  ItemRankProbability = 83,
  Shade2 = 84,
  Shade3 = 85,
  Shade4 = 86,
  ItemEfficiency = 87,
  ItemManaUpdateTimestamp = 88,
  SpellGestureSpeedMod = 89,
  SpellStanceSpeedMod = 90,
  AllegianceAppraisalTimestamp = 91,
  PowerLevel = 92,
  AccuracyLevel = 93,
  AttackAngle = 94,
  AttackTimestamp = 95,
  CheckpointTimestamp = 96,
  SoldTimestamp = 97,
  UseTimestamp = 98,
  UseLockTimestamp = 99,
  HealkitMod = 100,
  FrozenTimestamp = 101,
  HealthRateMod = 102,
  AllegianceSwearTimestamp = 103,
  ObviousRadarRange = 104,
  HotspotCycleTime = 105,
  HotspotCycleTimeVariance = 106,
  SpamTimestamp = 107,
  SpamRate = 108,
  BondWieldedTreasure = 109,
  BulkMod = 110,
  SizeMod = 111,
  GagTimestamp = 112,
  GeneratorUpdateTimestamp = 113,
  DeathSpamTimestamp = 114,
  DeathSpamRate = 115,
  WildAttackProbability = 116,
  FocusedProbability = 117,
  CrashAndTurnProbability = 118,
  CrashAndTurnRadius = 119,
  CrashAndTurnBias = 120,
  GeneratorInitialDelay = 121,
  AiAcquireHealth = 122,
  AiAcquireStamina = 123,
  AiAcquireMana = 124,
  ResistHealthDrain = 125,
  LifestoneProtectionTimestamp = 126,
  AiCounteractEnchantment = 127,
  AiDispelEnchantment = 128,
  TradeTimestamp = 129,
  AiTargetedDetectionRadius = 130,
  EmotePriority = 131,
  LastTeleportStartTimestamp = 132,
  EventSpamTimestamp = 133,
  EventSpamRate = 134,
  InventoryOffset = 135,
  CriticalMultiplier = 136,
  ManaStoneDestroyChance = 137,
  SlayerDamageBonus = 138,
  AllegianceInfoSpamTimestamp = 139,
  AllegianceInfoSpamRate = 140,
  NextSpellcastTimestamp = 141,
  AppraisalRequestedTimestamp = 142,
  AppraisalHeartbeatDueTimestamp = 143,
  ManaConversionMod = 144,
  LastPkAttackTimestamp = 145,
  FellowshipUpdateTimestamp = 146,
  CriticalFrequency = 147,
  LimboStartTimestamp = 148,
  WeaponMissileDefense = 149,
  WeaponMagicDefense = 150,
  IgnoreShield = 151,
  ElementalDamageMod = 152,
  StartMissileAttackTimestamp = 153,
  LastRareUsedTimestamp = 154,
  IgnoreArmor = 155,
  ProcSpellRate = 156,
  ResistanceModifier = 157,
  AllegianceGagTimestamp = 158,
  AbsorbMagicDamage = 159,
  CachedMaxAbsorbMagicDamage = 160,
  GagDuration = 161,
  AllegianceGagDuration = 162,
  GlobalXpMod = 163,
  HealingModifier = 164,
  ArmorModVsNether = 165,
  ResistNether = 166,
  CooldownDuration = 167,
  WeaponAuraOffense = 168,
  WeaponAuraDefense = 169,
  WeaponAuraElemental = 170,
  WeaponAuraManaConv = 171,
  PCAPRecordedWorkmanship = 8004,
  PCAPRecordedVelocityX = 8010,
  PCAPRecordedVelocityY = 8011,
  PCAPRecordedVelocityZ = 8012,
  PCAPRecordedAccelerationX = 8013,
  PCAPRecordedAccelerationY = 8014,
  PCAPRecordedAccelerationZ = 8015,
  PCAPRecordeOmegaX = 8016,
  PCAPRecordeOmegaY = 8017,
  PCAPRecordeOmegaZ = 8018,
}

export const PropertyFloatName: StringIndexedDict<string> = {
  [PropertyFloat.HeartbeatInterval]: "HeartbeatInterval",
  [PropertyFloat.HeartbeatTimestamp]: "HeartbeatTimestamp",
  [PropertyFloat.HealthRate]: "HealthRate",
  [PropertyFloat.StaminaRate]: "StaminaRate",
  [PropertyFloat.ManaRate]: "ManaRate",
  [PropertyFloat.HealthUponResurrection]: "HealthUponResurrection",
  [PropertyFloat.StaminaUponResurrection]: "StaminaUponResurrection",
  [PropertyFloat.ManaUponResurrection]: "ManaUponResurrection",
  [PropertyFloat.StartTime]: "StartTime",
  [PropertyFloat.StopTime]: "StopTime",
  [PropertyFloat.ResetInterval]: "ResetInterval",
  [PropertyFloat.Shade]: "Shade",
  [PropertyFloat.ArmorModVsSlash]: "ArmorModVsSlash",
  [PropertyFloat.ArmorModVsPierce]: "ArmorModVsPierce",
  [PropertyFloat.ArmorModVsBludgeon]: "ArmorModVsBludgeon",
  [PropertyFloat.ArmorModVsCold]: "ArmorModVsCold",
  [PropertyFloat.ArmorModVsFire]: "ArmorModVsFire",
  [PropertyFloat.ArmorModVsAcid]: "ArmorModVsAcid",
  [PropertyFloat.ArmorModVsElectric]: "ArmorModVsElectric",
  [PropertyFloat.CombatSpeed]: "CombatSpeed",
  [PropertyFloat.WeaponLength]: "WeaponLength",
  [PropertyFloat.DamageVariance]: "DamageVariance",
  [PropertyFloat.CurrentPowerMod]: "CurrentPowerMod",
  [PropertyFloat.AccuracyMod]: "AccuracyMod",
  [PropertyFloat.StrengthMod]: "StrengthMod",
  [PropertyFloat.MaximumVelocity]: "MaximumVelocity",
  [PropertyFloat.RotationSpeed]: "RotationSpeed",
  [PropertyFloat.MotionTimestamp]: "MotionTimestamp",
  [PropertyFloat.WeaponDefense]: "WeaponDefense",
  [PropertyFloat.WimpyLevel]: "WimpyLevel",
  [PropertyFloat.VisualAwarenessRange]: "VisualAwarenessRange",
  [PropertyFloat.AuralAwarenessRange]: "AuralAwarenessRange",
  [PropertyFloat.PerceptionLevel]: "PerceptionLevel",
  [PropertyFloat.PowerupTime]: "PowerupTime",
  [PropertyFloat.MaxChargeDistance]: "MaxChargeDistance",
  [PropertyFloat.ChargeSpeed]: "ChargeSpeed",
  [PropertyFloat.BuyPrice]: "BuyPrice",
  [PropertyFloat.SellPrice]: "SellPrice",
  [PropertyFloat.DefaultScale]: "DefaultScale",
  [PropertyFloat.LockpickMod]: "LockpickMod",
  [PropertyFloat.RegenerationInterval]: "RegenerationInterval",
  [PropertyFloat.RegenerationTimestamp]: "RegenerationTimestamp",
  [PropertyFloat.GeneratorRadius]: "GeneratorRadius",
  [PropertyFloat.TimeToRot]: "TimeToRot",
  [PropertyFloat.DeathTimestamp]: "DeathTimestamp",
  [PropertyFloat.PkTimestamp]: "PkTimestamp",
  [PropertyFloat.VictimTimestamp]: "VictimTimestamp",
  [PropertyFloat.LoginTimestamp]: "LoginTimestamp",
  [PropertyFloat.CreationTimestamp]: "CreationTimestamp",
  [PropertyFloat.MinimumTimeSincePk]: "MinimumTimeSincePk",
  [PropertyFloat.DeprecatedHousekeepingPriority]: "DeprecatedHousekeepingPriority",
  [PropertyFloat.AbuseLoggingTimestamp]: "AbuseLoggingTimestamp",
  [PropertyFloat.LastPortalTeleportTimestamp]: "LastPortalTeleportTimestamp",
  [PropertyFloat.UseRadius]: "UseRadius",
  [PropertyFloat.HomeRadius]: "HomeRadius",
  [PropertyFloat.ReleasedTimestamp]: "ReleasedTimestamp",
  [PropertyFloat.MinHomeRadius]: "MinHomeRadius",
  [PropertyFloat.Facing]: "Facing",
  [PropertyFloat.ResetTimestamp]: "ResetTimestamp",
  [PropertyFloat.LogoffTimestamp]: "LogoffTimestamp",
  [PropertyFloat.EconRecoveryInterval]: "EconRecoveryInterval",
  [PropertyFloat.WeaponOffense]: "WeaponOffense",
  [PropertyFloat.DamageMod]: "DamageMod",
  [PropertyFloat.ResistSlash]: "ResistSlash",
  [PropertyFloat.ResistPierce]: "ResistPierce",
  [PropertyFloat.ResistBludgeon]: "ResistBludgeon",
  [PropertyFloat.ResistFire]: "ResistFire",
  [PropertyFloat.ResistCold]: "ResistCold",
  [PropertyFloat.ResistAcid]: "ResistAcid",
  [PropertyFloat.ResistElectric]: "ResistElectric",
  [PropertyFloat.ResistHealthBoost]: "ResistHealthBoost",
  [PropertyFloat.ResistStaminaDrain]: "ResistStaminaDrain",
  [PropertyFloat.ResistStaminaBoost]: "ResistStaminaBoost",
  [PropertyFloat.ResistManaDrain]: "ResistManaDrain",
  [PropertyFloat.ResistManaBoost]: "ResistManaBoost",
  [PropertyFloat.Translucency]: "Translucency",
  [PropertyFloat.PhysicsScriptIntensity]: "PhysicsScriptIntensity",
  [PropertyFloat.Friction]: "Friction",
  [PropertyFloat.Elasticity]: "Elasticity",
  [PropertyFloat.AiUseMagicDelay]: "AiUseMagicDelay",
  [PropertyFloat.ItemMinSpellcraftMod]: "ItemMinSpellcraftMod",
  [PropertyFloat.ItemMaxSpellcraftMod]: "ItemMaxSpellcraftMod",
  [PropertyFloat.ItemRankProbability]: "ItemRankProbability",
  [PropertyFloat.Shade2]: "Shade2",
  [PropertyFloat.Shade3]: "Shade3",
  [PropertyFloat.Shade4]: "Shade4",
  [PropertyFloat.ItemEfficiency]: "ItemEfficiency",
  [PropertyFloat.ItemManaUpdateTimestamp]: "ItemManaUpdateTimestamp",
  [PropertyFloat.SpellGestureSpeedMod]: "SpellGestureSpeedMod",
  [PropertyFloat.SpellStanceSpeedMod]: "SpellStanceSpeedMod",
  [PropertyFloat.AllegianceAppraisalTimestamp]: "AllegianceAppraisalTimestamp",
  [PropertyFloat.PowerLevel]: "PowerLevel",
  [PropertyFloat.AccuracyLevel]: "AccuracyLevel",
  [PropertyFloat.AttackAngle]: "AttackAngle",
  [PropertyFloat.AttackTimestamp]: "AttackTimestamp",
  [PropertyFloat.CheckpointTimestamp]: "CheckpointTimestamp",
  [PropertyFloat.SoldTimestamp]: "SoldTimestamp",
  [PropertyFloat.UseTimestamp]: "UseTimestamp",
  [PropertyFloat.UseLockTimestamp]: "UseLockTimestamp",
  [PropertyFloat.HealkitMod]: "HealkitMod",
  [PropertyFloat.FrozenTimestamp]: "FrozenTimestamp",
  [PropertyFloat.HealthRateMod]: "HealthRateMod",
  [PropertyFloat.AllegianceSwearTimestamp]: "AllegianceSwearTimestamp",
  [PropertyFloat.ObviousRadarRange]: "ObviousRadarRange",
  [PropertyFloat.HotspotCycleTime]: "HotspotCycleTime",
  [PropertyFloat.HotspotCycleTimeVariance]: "HotspotCycleTimeVariance",
  [PropertyFloat.SpamTimestamp]: "SpamTimestamp",
  [PropertyFloat.SpamRate]: "SpamRate",
  [PropertyFloat.BondWieldedTreasure]: "BondWieldedTreasure",
  [PropertyFloat.BulkMod]: "BulkMod",
  [PropertyFloat.SizeMod]: "SizeMod",
  [PropertyFloat.GagTimestamp]: "GagTimestamp",
  [PropertyFloat.GeneratorUpdateTimestamp]: "GeneratorUpdateTimestamp",
  [PropertyFloat.DeathSpamTimestamp]: "DeathSpamTimestamp",
  [PropertyFloat.DeathSpamRate]: "DeathSpamRate",
  [PropertyFloat.WildAttackProbability]: "WildAttackProbability",
  [PropertyFloat.FocusedProbability]: "FocusedProbability",
  [PropertyFloat.CrashAndTurnProbability]: "CrashAndTurnProbability",
  [PropertyFloat.CrashAndTurnRadius]: "CrashAndTurnRadius",
  [PropertyFloat.CrashAndTurnBias]: "CrashAndTurnBias",
  [PropertyFloat.GeneratorInitialDelay]: "GeneratorInitialDelay",
  [PropertyFloat.AiAcquireHealth]: "AiAcquireHealth",
  [PropertyFloat.AiAcquireStamina]: "AiAcquireStamina",
  [PropertyFloat.AiAcquireMana]: "AiAcquireMana",
  [PropertyFloat.ResistHealthDrain]: "ResistHealthDrain",
  [PropertyFloat.LifestoneProtectionTimestamp]: "LifestoneProtectionTimestamp",
  [PropertyFloat.AiCounteractEnchantment]: "AiCounteractEnchantment",
  [PropertyFloat.AiDispelEnchantment]: "AiDispelEnchantment",
  [PropertyFloat.TradeTimestamp]: "TradeTimestamp",
  [PropertyFloat.AiTargetedDetectionRadius]: "AiTargetedDetectionRadius",
  [PropertyFloat.EmotePriority]: "EmotePriority",
  [PropertyFloat.LastTeleportStartTimestamp]: "LastTeleportStartTimestamp",
  [PropertyFloat.EventSpamTimestamp]: "EventSpamTimestamp",
  [PropertyFloat.EventSpamRate]: "EventSpamRate",
  [PropertyFloat.InventoryOffset]: "InventoryOffset",
  [PropertyFloat.CriticalMultiplier]: "CriticalMultiplier",
  [PropertyFloat.ManaStoneDestroyChance]: "ManaStoneDestroyChance",
  [PropertyFloat.SlayerDamageBonus]: "SlayerDamageBonus",
  [PropertyFloat.AllegianceInfoSpamTimestamp]: "AllegianceInfoSpamTimestamp",
  [PropertyFloat.AllegianceInfoSpamRate]: "AllegianceInfoSpamRate",
  [PropertyFloat.NextSpellcastTimestamp]: "NextSpellcastTimestamp",
  [PropertyFloat.AppraisalRequestedTimestamp]: "AppraisalRequestedTimestamp",
  [PropertyFloat.AppraisalHeartbeatDueTimestamp]: "AppraisalHeartbeatDueTimestamp",
  [PropertyFloat.ManaConversionMod]: "ManaConversionMod",
  [PropertyFloat.LastPkAttackTimestamp]: "LastPkAttackTimestamp",
  [PropertyFloat.FellowshipUpdateTimestamp]: "FellowshipUpdateTimestamp",
  [PropertyFloat.CriticalFrequency]: "CriticalFrequency",
  [PropertyFloat.LimboStartTimestamp]: "LimboStartTimestamp",
  [PropertyFloat.WeaponMissileDefense]: "WeaponMissileDefense",
  [PropertyFloat.WeaponMagicDefense]: "WeaponMagicDefense",
  [PropertyFloat.IgnoreShield]: "IgnoreShield",
  [PropertyFloat.ElementalDamageMod]: "ElementalDamageMod",
  [PropertyFloat.StartMissileAttackTimestamp]: "StartMissileAttackTimestamp",
  [PropertyFloat.LastRareUsedTimestamp]: "LastRareUsedTimestamp",
  [PropertyFloat.IgnoreArmor]: "IgnoreArmor",
  [PropertyFloat.ProcSpellRate]: "ProcSpellRate",
  [PropertyFloat.ResistanceModifier]: "ResistanceModifier",
  [PropertyFloat.AllegianceGagTimestamp]: "AllegianceGagTimestamp",
  [PropertyFloat.AbsorbMagicDamage]: "AbsorbMagicDamage",
  [PropertyFloat.CachedMaxAbsorbMagicDamage]: "CachedMaxAbsorbMagicDamage",
  [PropertyFloat.GagDuration]: "GagDuration",
  [PropertyFloat.AllegianceGagDuration]: "AllegianceGagDuration",
  [PropertyFloat.GlobalXpMod]: "GlobalXpMod",
  [PropertyFloat.HealingModifier]: "HealingModifier",
  [PropertyFloat.ArmorModVsNether]: "ArmorModVsNether",
  [PropertyFloat.ResistNether]: "ResistNether",
  [PropertyFloat.CooldownDuration]: "CooldownDuration",
  [PropertyFloat.WeaponAuraOffense]: "WeaponAuraOffense",
  [PropertyFloat.WeaponAuraDefense]: "WeaponAuraDefense",
  [PropertyFloat.WeaponAuraElemental]: "WeaponAuraElemental",
  [PropertyFloat.WeaponAuraManaConv]: "WeaponAuraManaConv",
  [PropertyFloat.PCAPRecordedWorkmanship]: "PCAPRecordedWorkmanship",
  [PropertyFloat.PCAPRecordedVelocityX]: "PCAPRecordedVelocityX",
  [PropertyFloat.PCAPRecordedVelocityY]: "PCAPRecordedVelocityY",
  [PropertyFloat.PCAPRecordedVelocityZ]: "PCAPRecordedVelocityZ",
  [PropertyFloat.PCAPRecordedAccelerationX]: "PCAPRecordedAccelerationX",
  [PropertyFloat.PCAPRecordedAccelerationY]: "PCAPRecordedAccelerationY",
  [PropertyFloat.PCAPRecordedAccelerationZ]: "PCAPRecordedAccelerationZ",
  [PropertyFloat.PCAPRecordeOmegaX]: "PCAPRecordeOmegaX",
  [PropertyFloat.PCAPRecordeOmegaY]: "PCAPRecordeOmegaY",
  [PropertyFloat.PCAPRecordeOmegaZ]: "PCAPRecordeOmegaZ",
}

// ACE:ItemType.cs
export enum ItemType {
  None = 0x00000000,
  MeleeWeapon = 0x00000001,
  Armor = 0x00000002,
  Clothing = 0x00000004,
  Jewelry = 0x00000008,
  Creature = 0x00000010,
  Food = 0x00000020,
  Money = 0x00000040,
  Misc = 0x00000080,
  MissileWeapon = 0x00000100,
  Container = 0x00000200,
  Useless = 0x00000400,
  Gem = 0x00000800,
  SpellComponents = 0x00001000,
  Writable = 0x00002000,
  Key = 0x00004000,
  Caster = 0x00008000,
  Portal = 0x00010000,
  Lockable = 0x00020000,
  PromissoryNote = 0x00040000,
  ManaStone = 0x00080000,
  Service = 0x00100000,
  MagicWieldable = 0x00200000,
  CraftCookingBase = 0x00400000,
  CraftAlchemyBase = 0x00800000,
  CraftFletchingBase = 0x02000000,
  CraftAlchemyIntermediate = 0x04000000,
  CraftFletchingIntermediate = 0x08000000,
  LifeStone = 0x10000000,
  TinkeringTool = 0x20000000,
  TinkeringMaterial = 0x40000000,
  Gameboard = 0x80000000,
}

// ACE:WeenieType.cs
export enum WeenieType {
  Undef = 0,
  Generic = 1,
  Clothing = 2,
  MissileLauncher = 3,
  Missile = 4,
  Ammunition = 5,
  MeleeWeapon = 6,
  Portal = 7,
  Book = 8,
  Coin = 9,
  Creature = 10,
  Admin = 11,
  Vendor = 12,
  HotSpot = 13,
  Corpse = 14,
  Cow = 15,
  AI = 16,
  Machine = 17,
  Food = 18,
  Door = 19,
  Chest = 20,
  Container = 21,
  Key = 22,
  Lockpick = 23,
  PressurePlate = 24,
  LifeStone = 25,
  Switch = 26,
  PKModifier = 27,
  Healer = 28,
  LightSource = 29,
  Allegiance = 30,
  UNKNOWN__GUESSEDNAME32 = 31, // NOTE: Missing 1
  SpellComponent = 32,
  ProjectileSpell = 33,
  Scroll = 34,
  Caster = 35,
  Channel = 36,
  ManaStone = 37,
  Gem = 38,
  AdvocateFane = 39,
  AdvocateItem = 40,
  Sentinel = 41,
  GSpellEconomy = 42,
  LSpellEconomy = 43,
  CraftTool = 44,
  LScoreKeeper = 45,
  GScoreKeeper = 46,
  GScoreGatherer = 47,
  ScoreBook = 48,
  EventCoordinator = 49,
  Entity = 50,
  Stackable = 51,
  HUD = 52,
  House = 53,
  Deed = 54,
  SlumLord = 55,
  Hook = 56,
  Storage = 57,
  BootSpot = 58,
  HousePortal = 59,
  Game = 60,
  GamePiece = 61,
  SkillAlterationDevice = 62,
  AttributeTransferDevice = 63,
  Hooker = 64,
  AllegianceBindstone = 65,
  InGameStatKeeper = 66,
  AugmentationDevice = 67,
  SocialManager = 68,
  Pet = 69,
  PetDevice = 70,
  CombatPet = 71,
}

// ACE:CreatureType.cs
export enum CreatureType {
  Invalid = 0,
  Olthoi = 1,
  Banderling = 2,
  Drudge = 3,
  Mosswart = 4,
  Lugian = 5,
  Tumerok = 6,
  Mite = 7,
  Tusker = 8,
  PhyntosWasp = 9,
  Rat = 10,
  Auroch = 11,
  Cow = 12,
  Golem = 13,
  Undead = 14,
  Gromnie = 15,
  Reedshark = 16,
  Armoredillo = 17,
  Fae = 18,
  Virindi = 19,
  Wisp = 20,
  Knathtead = 21,
  Shadow = 22,
  Mattekar = 23,
  Mumiyah = 24,
  Rabbit = 25,
  Sclavus = 26,
  ShallowsShark = 27,
  Monouga = 28,
  Zefir = 29,
  Skeleton = 30,
  Human = 31,
  Shreth = 32,
  Chittick = 33,
  Moarsman = 34,
  OlthoiLarvae = 35,
  Slithis = 36,
  Deru = 37,
  FireElemental = 38,
  Snowman = 39,
  Unknown = 40,
  Bunny = 41,
  LightningElemental = 42,
  Rockslide = 43,
  Grievver = 44,
  Niffis = 45,
  Ursuin = 46,
  Crystal = 47,
  HollowMinion = 48,
  Scarecrow = 49,
  Idol = 50,
  Empyrean = 51,
  Hopeslayer = 52,
  Doll = 53,
  Marionette = 54,
  Carenzi = 55,
  Siraluun = 56,
  AunTumerok = 57,
  HeaTumerok = 58,
  Simulacrum = 59,
  AcidElemental = 60,
  FrostElemental = 61,
  Elemental = 62,
  Statue = 63,
  Wall = 64,
  AlteredHuman = 65,
  Device = 66,
  Harbinger = 67,
  DarkSarcophagus = 68,
  Chicken = 69,
  GotrokLugian = 70,
  Margul = 71,
  BleachedRabbit = 72,
  NastyRabbit = 73,
  GrimacingRabbit = 74,
  Burun = 75,
  Target = 76,
  Ghost = 77,
  Fiun = 78,
  Eater = 79,
  Penguin = 80,
  Ruschk = 81,
  Thrungus = 82,
  ViamontianKnight = 83,
  Remoran = 84,
  Swarm = 85,
  Moar = 86,
  EnchantedArms = 87,
  Sleech = 88,
  Mukkir = 89,
  Merwart = 90,
  Food = 91,
  ParadoxOlthoi = 92,
  Harvest = 93,
  Energy = 94,
  Apparition = 95,
  Aerbax = 96,
  Touched = 97,
  BlightedMoarsman = 98,
  GearKnight = 99,
  Gurog = 100,
  Anekshay = 101,
}

export const CreatureTypeName: StringIndexedDict<string> = {
  [CreatureType.Invalid]: "Invalid",
  [CreatureType.Olthoi]: "Olthoi",
  [CreatureType.Banderling]: "Banderling",
  [CreatureType.Drudge]: "Drudge",
  [CreatureType.Mosswart]: "Mosswart",
  [CreatureType.Lugian]: "Lugian",
  [CreatureType.Tumerok]: "Tumerok",
  [CreatureType.Mite]: "Mite",
  [CreatureType.Tusker]: "Tusker",
  [CreatureType.PhyntosWasp]: "Phyntos Wasp",
  [CreatureType.Rat]: "Rat",
  [CreatureType.Auroch]: "Auroch",
  [CreatureType.Cow]: "Cow",
  [CreatureType.Golem]: "Golem",
  [CreatureType.Undead]: "Undead",
  [CreatureType.Gromnie]: "Gromnie",
  [CreatureType.Reedshark]: "Reedshark",
  [CreatureType.Armoredillo]: "Armoredillo",
  [CreatureType.Fae]: "Fae",
  [CreatureType.Virindi]: "Virindi",
  [CreatureType.Wisp]: "Wisp",
  [CreatureType.Knathtead]: "Knathtead",
  [CreatureType.Shadow]: "Shadow",
  [CreatureType.Mattekar]: "Mattekar",
  [CreatureType.Mumiyah]: "Mumiyah",
  [CreatureType.Rabbit]: "Rabbit",
  [CreatureType.Sclavus]: "Sclavus",
  [CreatureType.ShallowsShark]: "Shallows Shark",
  [CreatureType.Monouga]: "Monouga",
  [CreatureType.Zefir]: "Zefir",
  [CreatureType.Skeleton]: "Skeleton",
  [CreatureType.Human]: "Human",
  [CreatureType.Shreth]: "Shreth",
  [CreatureType.Chittick]: "Chittick",
  [CreatureType.Moarsman]: "Moarsman",
  [CreatureType.OlthoiLarvae]: "Olthoi Larvae",
  [CreatureType.Slithis]: "Slithis",
  [CreatureType.Deru]: "Deru",
  [CreatureType.FireElemental]: "Fire Elemental",
  [CreatureType.Snowman]: "Snowman",
  [CreatureType.Unknown]: "Unknown",
  [CreatureType.Bunny]: "Bunny",
  [CreatureType.LightningElemental]: "Lightning Elemental",
  [CreatureType.Rockslide]: "Rockslide",
  [CreatureType.Grievver]: "Grievver",
  [CreatureType.Niffis]: "Niffis",
  [CreatureType.Ursuin]: "Ursuin",
  [CreatureType.Crystal]: "Crystal",
  [CreatureType.HollowMinion]: "Hollow Minion",
  [CreatureType.Scarecrow]: "Scarecrow",
  [CreatureType.Idol]: "Idol",
  [CreatureType.Empyrean]: "Empyrean",
  [CreatureType.Hopeslayer]: "Hopeslayer",
  [CreatureType.Doll]: "Doll",
  [CreatureType.Marionette]: "Marionette",
  [CreatureType.Carenzi]: "Carenzi",
  [CreatureType.Siraluun]: "Siraluun",
  [CreatureType.AunTumerok]: "AunTumerok",
  [CreatureType.HeaTumerok]: "HeaTumerok",
  [CreatureType.Simulacrum]: "Simulacrum",
  [CreatureType.AcidElemental]: "Acid Elemental",
  [CreatureType.FrostElemental]: "Frost Elemental",
  [CreatureType.Elemental]: "Elemental",
  [CreatureType.Statue]: "Statue",
  [CreatureType.Wall]: "Wall",
  [CreatureType.AlteredHuman]: "Altered Human",
  [CreatureType.Device]: "Device",
  [CreatureType.Harbinger]: "Harbinger",
  [CreatureType.DarkSarcophagus]: "Dark Sarcophagus",
  [CreatureType.Chicken]: "Chicken",
  [CreatureType.GotrokLugian]: "Gotrok Lugian",
  [CreatureType.Margul]: "Margul",
  [CreatureType.BleachedRabbit]: "Bleached Rabbit",
  [CreatureType.NastyRabbit]: "Nasty Rabbit",
  [CreatureType.GrimacingRabbit]: "Grimacing Rabbit",
  [CreatureType.Burun]: "Burun",
  [CreatureType.Target]: "Target",
  [CreatureType.Ghost]: "Ghost",
  [CreatureType.Fiun]: "Fiun",
  [CreatureType.Eater]: "Eater",
  [CreatureType.Penguin]: "Penguin",
  [CreatureType.Ruschk]: "Ruschk",
  [CreatureType.Thrungus]: "Thrungus",
  [CreatureType.ViamontianKnight]: "Viamontian Knight",
  [CreatureType.Remoran]: "Remoran",
  [CreatureType.Swarm]: "Swarm",
  [CreatureType.Moar]: "Moar",
  [CreatureType.EnchantedArms]: "Enchanted Arms",
  [CreatureType.Sleech]: "Sleech",
  [CreatureType.Mukkir]: "Mukkir",
  [CreatureType.Merwart]: "Merwart",
  [CreatureType.Food]: "Food",
  [CreatureType.ParadoxOlthoi]: "Paradox Olthoi",
  [CreatureType.Harvest]: "Harvest",
  [CreatureType.Energy]: "Energy",
  [CreatureType.Apparition]: "Apparition",
  [CreatureType.Aerbax]: "Aerbax",
  [CreatureType.Touched]: "Touched",
  [CreatureType.BlightedMoarsman]: "Blighted Moarsman",
  [CreatureType.GearKnight]: "Gear Knight",
  [CreatureType.Gurog]: "Gurog",
  [CreatureType.Anekshay]: "Anekshay",
}

// ACE:Skill.cs
export enum Skill {
  None = 0,
  Axe = 1,
  Bow = 2,
  Crossbow = 3,
  Dagger = 4,
  Mace = 5,
  MeleeDefense = 6,
  MissileDefense = 7,
  Sling = 8,
  Spear = 9,
  Staff = 10,
  Sword = 11,
  ThrownWeapon = 12,
  UnarmedCombat = 13,
  ArcaneLore = 14,
  MagicDefense = 15,
  ManaConversion = 16,
  Spellcraft = 17,
  ItemTinkering = 18,
  AssessPerson = 19,
  Deception = 20,
  Healing = 21,
  Jump = 22,
  Lockpick = 23,
  Run = 24,
  Awareness = 25,
  ArmsAndArmorRepair = 26,
  AssessCreature = 27,
  WeaponTinkering = 28,
  ArmorTinkering = 29,
  MagicItemTinkering = 30,
  CreatureEnchantment = 31,
  ItemEnchantment = 32,
  LifeMagic = 33,
  WarMagic = 34,
  Leadership = 35,
  Loyalty = 36,
  Fletching = 37,
  Alchemy = 38,
  Cooking = 39,
  Salvaging = 40,
  TwoHandedCombat = 41,
  Gearcraft = 42,
  VoidMagic = 43,
  HeavyWeapons = 44,
  LightWeapons = 45,
  FinesseWeapons = 46,
  MissileWeapons = 47,
  Shield = 48,
  DualWield = 49,
  Recklessness = 50,
  SneakAttack = 51,
  DirtyFighting = 52,
  Challenge = 53,
  Summoning = 54,
}

export const SkillName: StringIndexedDict<string> = {
  [Skill.None]: "None",
  [Skill.Axe]: "Axe",
  [Skill.Bow]: "Bow",
  [Skill.Crossbow]: "Crossbow",
  [Skill.Dagger]: "Dagger",
  [Skill.Mace]: "Mace",
  [Skill.MeleeDefense]: "Melee Defense",
  [Skill.MissileDefense]: "Missile Defense",
  [Skill.Sling]: "Sling",
  [Skill.Spear]: "Spear",
  [Skill.Staff]: "Staff",
  [Skill.Sword]: "Sword",
  [Skill.ThrownWeapon]: "Thrown Weapon",
  [Skill.UnarmedCombat]: "Unarmed Combat",
  [Skill.ArcaneLore]: "Arcane Lore",
  [Skill.MagicDefense]: "Magic Defense",
  [Skill.ManaConversion]: "Mana Conversion",
  [Skill.Spellcraft]: "Spellcraft",
  [Skill.ItemTinkering]: "Item Tinkering",
  [Skill.AssessPerson]: "Assess Person",
  [Skill.Deception]: "Deception",
  [Skill.Healing]: "Healing",
  [Skill.Jump]: "Jump",
  [Skill.Lockpick]: "Lockpick",
  [Skill.Run]: "Run",
  [Skill.Awareness]: "Awareness",
  [Skill.ArmsAndArmorRepair]: "Arms And Armor Repair",
  [Skill.AssessCreature]: "Assess Creature",
  [Skill.WeaponTinkering]: "Weapon Tinkering",
  [Skill.ArmorTinkering]: "Armor Tinkering",
  [Skill.MagicItemTinkering]: "Magic Item Tinkering",
  [Skill.CreatureEnchantment]: "Creature Enchantment",
  [Skill.ItemEnchantment]: "Item Enchantment",
  [Skill.LifeMagic]: "Life Magic",
  [Skill.WarMagic]: "War Magic",
  [Skill.Leadership]: "Leadership",
  [Skill.Loyalty]: "Loyalty",
  [Skill.Fletching]: "Fletching",
  [Skill.Alchemy]: "Alchemy",
  [Skill.Cooking]: "Cooking",
  [Skill.Salvaging]: "Salvaging",
  [Skill.TwoHandedCombat]: "TwoHanded Combat",
  [Skill.Gearcraft]: "Gearcraft",
  [Skill.VoidMagic]: "Void Magic",
  [Skill.HeavyWeapons]: "Heavy Weapons",
  [Skill.LightWeapons]: "Light Weapons",
  [Skill.FinesseWeapons]: "Finesse Weapons",
  [Skill.MissileWeapons]: "Missile Weapons",
  [Skill.Shield]: "Shield",
  [Skill.DualWield]: "Dual Wield",
  [Skill.Recklessness]: "Recklessness",
  [Skill.SneakAttack]: "Sneak Attack",
  [Skill.DirtyFighting]: "Dirty Fighting",
  [Skill.Challenge]: "Challenge",
  [Skill.Summoning]: "Summoning",
}

// ACE::WeaponType.cs
export enum WeaponType {
  Undef = 0,
  Unarmed = 1,
  Sword = 2,
  Axe = 3,
  Mace = 4,
  Spear = 5,
  Dagger = 6,
  Staff = 7,
  Bow = 8,
  Crossbow = 9,
  Thrown = 10,
  TwoHanded = 11,
  Magic = 12,
}

export const WeaponTypeName: StringIndexedDict<string> = {
  [WeaponType.Undef]: "Undefined",
  [WeaponType.Unarmed]: "Unarmed Combat",
  [WeaponType.Sword]: "Sword",
  [WeaponType.Axe]: "Axe",
  [WeaponType.Mace]: "Mace",
  [WeaponType.Spear]: "Spear",
  [WeaponType.Dagger]: "Dagger",
  [WeaponType.Staff]: "Staff",
  [WeaponType.Bow]: "Bow",
  [WeaponType.Crossbow]: "Crossbow",
  [WeaponType.Thrown]: "Thrown",
  [WeaponType.TwoHanded]: "Two Handed",
  [WeaponType.Magic]: "Magic",
}

// ACE::PropertyBool.cs
export enum PropertyBool {
  Undef = 0,
  Stuck = 1,
  Open = 2,
  Locked = 3,
  RotProof = 4,
  AllegianceUpdateRequest = 5,
  AiUsesMana = 6,
  AiUseHumanMagicAnimations = 7,
  AllowGive = 8,
  CurrentlyAttacking = 9,
  AttackerAi = 10,
  IgnoreCollisions = 11,
  ReportCollisions = 12,
  Ethereal = 13,
  GravityStatus = 14,
  LightsStatus = 15,
  ScriptedCollision = 16,
  Inelastic = 17,
  Visibility = 18,
  Attackable = 19,
  SafeSpellComponents = 20,
  AdvocateState = 21,
  Inscribable = 22,
  DestroyOnSell = 23,
  UiHidden = 24,
  IgnoreHouseBarriers = 25,
  HiddenAdmin = 26,
  PkWounder = 27,
  PkKiller = 28,
  NoCorpse = 29,
  UnderLifestoneProtection = 30,
  ItemManaUpdatePending = 31,
  GeneratorStatus = 32,
  ResetMessagePending = 33,
  DefaultOpen = 34,
  DefaultLocked = 35,
  DefaultOn = 36,
  OpenForBusiness = 37,
  IsFrozen = 38,
  DealMagicalItems = 39,
  LogoffImDead = 40,
  ReportCollisionsAsEnvironment = 41,
  AllowEdgeSlide = 42,
  AdvocateQuest = 43,
  IsAdmin = 44,
  IsArch = 45,
  IsSentinel = 46,
  IsAdvocate = 47,
  CurrentlyPoweringUp = 48,
  GeneratorEnteredWorld = 49,
  NeverFailCasting = 50,
  VendorService = 51,
  AiImmobile = 52,
  DamagedByCollisions = 53,
  IsDynamic = 54,
  IsHot = 55,
  IsAffecting = 56,
  AffectsAis = 57,
  SpellQueueActive = 58,
  GeneratorDisabled = 59,
  IsAcceptingTells = 60,
  LoggingChannel = 61,
  OpensAnyLock = 62,
  UnlimitedUse = 63,
  GeneratedTreasureItem = 64,
  IgnoreMagicResist = 65,
  IgnoreMagicArmor = 66,
  AiAllowTrade = 67,
  SpellComponentsRequired = 68,
  IsSellable = 69,
  IgnoreShieldsBySkill = 70,
  NoDraw = 71,
  ActivationUntargeted = 72,
  HouseHasGottenPriorityBootPos = 73,
  GeneratorAutomaticDestruction = 74,
  HouseHooksVisible = 75,
  HouseRequiresMonarch = 76,
  HouseHooksEnabled = 77,
  HouseNotifiedHudOfHookCount = 78,
  AiAcceptEverything = 79,
  IgnorePortalRestrictions = 80,
  RequiresBackpackSlot = 81,
  DontTurnOrMoveWhenGiving = 82,
  NpcLooksLikeObject = 83,
  IgnoreCloIcons = 84,
  AppraisalHasAllowedWielder = 85,
  ChestRegenOnClose = 86,
  LogoffInMinigame = 87,
  PortalShowDestination = 88,
  PortalIgnoresPkAttackTimer = 89,
  NpcInteractsSilently = 90,
  Retained = 91,
  IgnoreAuthor = 92,
  Limbo = 93,
  AppraisalHasAllowedActivator = 94,
  ExistedBeforeAllegianceXpChanges = 95,
  IsDeaf = 96,
  IsPsr = 97,
  Invincible = 98,
  Ivoryable = 99,
  Dyable = 100,
  CanGenerateRare = 101,
  CorpseGeneratedRare = 102,
  NonProjectileMagicImmune = 103,
  ActdReceivedItems = 104,
  Unknown105 = 105,
  FirstEnterWorldDone = 106,
  RecallsDisabled = 107,
  RareUsesTimer = 108,
  ActdPreorderReceivedItems = 109,
  Afk = 110,
  IsGagged = 111,
  ProcSpellSelfTargeted = 112,
  IsAllegianceGagged = 113,
  EquipmentSetTriggerPiece = 114,
  Uninscribe = 115,
  WieldOnUse = 116,
  ChestClearedWhenClosed = 117,
  NeverAttack = 118,
  SuppressGenerateEffect = 119,
  TreasureCorpse = 120,
  EquipmentSetAddLevel = 121,
  BarberActive = 122,
  TopLayerPriority = 123,
  NoHeldItemShown = 124,
  LoginAtLifestone = 125,
  OlthoiPk = 126,
  Account15Days = 127,
  HadNoVitae = 128,
  NoOlthoiTalk = 129,
  AutowieldLeft = 130,
  LinkedPortalOneSummon = 9001,
  LinkedPortalTwoSummon = 9002,
  HouseEvicted = 9003,
  UntrainedSkills = 9004,
  IsEnvoy = 9005,
  UnspecializedSkills = 9006,
  FreeSkillResetRenewed = 9007,
  FreeAttributeResetRenewed = 9008,
  SkillTemplesTimerReset = 9009,
  FreeMasteryResetRenewed = 9010,
}

export const PropertyBoolName: StringIndexedDict<string> = {
  [PropertyBool.Undef]: "Undef",
  [PropertyBool.Stuck]: "Stuck",
  [PropertyBool.Open]: "Open",
  [PropertyBool.Locked]: "Locked",
  [PropertyBool.RotProof]: "RotProof",
  [PropertyBool.AllegianceUpdateRequest]: "AllegianceUpdateRequest",
  [PropertyBool.AiUsesMana]: "AiUsesMana",
  [PropertyBool.AiUseHumanMagicAnimations]: "AiUseHumanMagicAnimations",
  [PropertyBool.AllowGive]: "AllowGive",
  [PropertyBool.CurrentlyAttacking]: "CurrentlyAttacking",
  [PropertyBool.AttackerAi]: "AttackerAi",
  [PropertyBool.IgnoreCollisions]: "IgnoreCollisions",
  [PropertyBool.ReportCollisions]: "ReportCollisions",
  [PropertyBool.Ethereal]: "Ethereal",
  [PropertyBool.GravityStatus]: "GravityStatus",
  [PropertyBool.LightsStatus]: "LightsStatus",
  [PropertyBool.ScriptedCollision]: "ScriptedCollision",
  [PropertyBool.Inelastic]: "Inelastic",
  [PropertyBool.Visibility]: "Visibility",
  [PropertyBool.Attackable]: "Attackable",
  [PropertyBool.SafeSpellComponents]: "SafeSpellComponents",
  [PropertyBool.AdvocateState]: "AdvocateState",
  [PropertyBool.Inscribable]: "Inscribable",
  [PropertyBool.DestroyOnSell]: "DestroyOnSell",
  [PropertyBool.UiHidden]: "UiHidden",
  [PropertyBool.IgnoreHouseBarriers]: "IgnoreHouseBarriers",
  [PropertyBool.HiddenAdmin]: "HiddenAdmin",
  [PropertyBool.PkWounder]: "PkWounder",
  [PropertyBool.PkKiller]: "PkKiller",
  [PropertyBool.NoCorpse]: "NoCorpse",
  [PropertyBool.UnderLifestoneProtection]: "UnderLifestoneProtection",
  [PropertyBool.ItemManaUpdatePending]: "ItemManaUpdatePending",
  [PropertyBool.GeneratorStatus]: "GeneratorStatus",
  [PropertyBool.ResetMessagePending]: "ResetMessagePending",
  [PropertyBool.DefaultOpen]: "DefaultOpen",
  [PropertyBool.DefaultLocked]: "DefaultLocked",
  [PropertyBool.DefaultOn]: "DefaultOn",
  [PropertyBool.OpenForBusiness]: "OpenForBusiness",
  [PropertyBool.IsFrozen]: "IsFrozen",
  [PropertyBool.DealMagicalItems]: "DealMagicalItems",
  [PropertyBool.LogoffImDead]: "LogoffImDead",
  [PropertyBool.ReportCollisionsAsEnvironment]: "ReportCollisionsAsEnvironment",
  [PropertyBool.AllowEdgeSlide]: "AllowEdgeSlide",
  [PropertyBool.AdvocateQuest]: "AdvocateQuest",
  [PropertyBool.IsAdmin]: "IsAdmin",
  [PropertyBool.IsArch]: "IsArch",
  [PropertyBool.IsSentinel]: "IsSentinel",
  [PropertyBool.IsAdvocate]: "IsAdvocate",
  [PropertyBool.CurrentlyPoweringUp]: "CurrentlyPoweringUp",
  [PropertyBool.GeneratorEnteredWorld]: "GeneratorEnteredWorld",
  [PropertyBool.NeverFailCasting]: "NeverFailCasting",
  [PropertyBool.VendorService]: "VendorService",
  [PropertyBool.AiImmobile]: "AiImmobile",
  [PropertyBool.DamagedByCollisions]: "DamagedByCollisions",
  [PropertyBool.IsDynamic]: "IsDynamic",
  [PropertyBool.IsHot]: "IsHot",
  [PropertyBool.IsAffecting]: "IsAffecting",
  [PropertyBool.AffectsAis]: "AffectsAis",
  [PropertyBool.SpellQueueActive]: "SpellQueueActive",
  [PropertyBool.GeneratorDisabled]: "GeneratorDisabled",
  [PropertyBool.IsAcceptingTells]: "IsAcceptingTells",
  [PropertyBool.LoggingChannel]: "LoggingChannel",
  [PropertyBool.OpensAnyLock]: "OpensAnyLock",
  [PropertyBool.UnlimitedUse]: "UnlimitedUse",
  [PropertyBool.GeneratedTreasureItem]: "GeneratedTreasureItem",
  [PropertyBool.IgnoreMagicResist]: "IgnoreMagicResist",
  [PropertyBool.IgnoreMagicArmor]: "IgnoreMagicArmor",
  [PropertyBool.AiAllowTrade]: "AiAllowTrade",
  [PropertyBool.SpellComponentsRequired]: "SpellComponentsRequired",
  [PropertyBool.IsSellable]: "IsSellable",
  [PropertyBool.IgnoreShieldsBySkill]: "IgnoreShieldsBySkill",
  [PropertyBool.NoDraw]: "NoDraw",
  [PropertyBool.ActivationUntargeted]: "ActivationUntargeted",
  [PropertyBool.HouseHasGottenPriorityBootPos]: "HouseHasGottenPriorityBootPos",
  [PropertyBool.GeneratorAutomaticDestruction]: "GeneratorAutomaticDestruction",
  [PropertyBool.HouseHooksVisible]: "HouseHooksVisible",
  [PropertyBool.HouseRequiresMonarch]: "HouseRequiresMonarch",
  [PropertyBool.HouseHooksEnabled]: "HouseHooksEnabled",
  [PropertyBool.HouseNotifiedHudOfHookCount]: "HouseNotifiedHudOfHookCount",
  [PropertyBool.AiAcceptEverything]: "AiAcceptEverything",
  [PropertyBool.IgnorePortalRestrictions]: "IgnorePortalRestrictions",
  [PropertyBool.RequiresBackpackSlot]: "RequiresBackpackSlot",
  [PropertyBool.DontTurnOrMoveWhenGiving]: "DontTurnOrMoveWhenGiving",
  [PropertyBool.NpcLooksLikeObject]: "NpcLooksLikeObject",
  [PropertyBool.IgnoreCloIcons]: "IgnoreCloIcons",
  [PropertyBool.AppraisalHasAllowedWielder]: "AppraisalHasAllowedWielder",
  [PropertyBool.ChestRegenOnClose]: "ChestRegenOnClose",
  [PropertyBool.LogoffInMinigame]: "LogoffInMinigame",
  [PropertyBool.PortalShowDestination]: "PortalShowDestination",
  [PropertyBool.PortalIgnoresPkAttackTimer]: "PortalIgnoresPkAttackTimer",
  [PropertyBool.NpcInteractsSilently]: "NpcInteractsSilently",
  [PropertyBool.Retained]: "Retained",
  [PropertyBool.IgnoreAuthor]: "IgnoreAuthor",
  [PropertyBool.Limbo]: "Limbo",
  [PropertyBool.AppraisalHasAllowedActivator]: "AppraisalHasAllowedActivator",
  [PropertyBool.ExistedBeforeAllegianceXpChanges]: "ExistedBeforeAllegianceXpChanges",
  [PropertyBool.IsDeaf]: "IsDeaf",
  [PropertyBool.IsPsr]: "IsPsr",
  [PropertyBool.Invincible]: "Invincible",
  [PropertyBool.Ivoryable]: "Ivoryable",
  [PropertyBool.Dyable]: "Dyable",
  [PropertyBool.CanGenerateRare]: "CanGenerateRare",
  [PropertyBool.CorpseGeneratedRare]: "CorpseGeneratedRare",
  [PropertyBool.NonProjectileMagicImmune]: "NonProjectileMagicImmune",
  [PropertyBool.ActdReceivedItems]: "ActdReceivedItems",
  [PropertyBool.Unknown105]: "Unknown105",
  [PropertyBool.FirstEnterWorldDone]: "FirstEnterWorldDone",
  [PropertyBool.RecallsDisabled]: "RecallsDisabled",
  [PropertyBool.RareUsesTimer]: "RareUsesTimer",
  [PropertyBool.ActdPreorderReceivedItems]: "ActdPreorderReceivedItems",
  [PropertyBool.Afk]: "Afk",
  [PropertyBool.IsGagged]: "IsGagged",
  [PropertyBool.ProcSpellSelfTargeted]: "ProcSpellSelfTargeted",
  [PropertyBool.IsAllegianceGagged]: "IsAllegianceGagged",
  [PropertyBool.EquipmentSetTriggerPiece]: "EquipmentSetTriggerPiece",
  [PropertyBool.Uninscribe]: "Uninscribe",
  [PropertyBool.WieldOnUse]: "WieldOnUse",
  [PropertyBool.ChestClearedWhenClosed]: "ChestClearedWhenClosed",
  [PropertyBool.NeverAttack]: "NeverAttack",
  [PropertyBool.SuppressGenerateEffect]: "SuppressGenerateEffect",
  [PropertyBool.TreasureCorpse]: "TreasureCorpse",
  [PropertyBool.EquipmentSetAddLevel]: "EquipmentSetAddLevel",
  [PropertyBool.BarberActive]: "BarberActive",
  [PropertyBool.TopLayerPriority]: "TopLayerPriority",
  [PropertyBool.NoHeldItemShown]: "NoHeldItemShown",
  [PropertyBool.LoginAtLifestone]: "LoginAtLifestone",
  [PropertyBool.OlthoiPk]: "OlthoiPk",
  [PropertyBool.Account15Days]: "Account15Days",
  [PropertyBool.HadNoVitae]: "HadNoVitae",
  [PropertyBool.NoOlthoiTalk]: "NoOlthoiTalk",
  [PropertyBool.AutowieldLeft]: "AutowieldLeft",
  [PropertyBool.LinkedPortalOneSummon]: "LinkedPortalOneSummon",
  [PropertyBool.LinkedPortalTwoSummon]: "LinkedPortalTwoSummon",
  [PropertyBool.HouseEvicted]: "HouseEvicted",
  [PropertyBool.UntrainedSkills]: "UntrainedSkills",
  [PropertyBool.IsEnvoy]: "IsEnvoy",
  [PropertyBool.UnspecializedSkills]: "UnspecializedSkills",
  [PropertyBool.FreeSkillResetRenewed]: "FreeSkillResetRenewed",
  [PropertyBool.FreeAttributeResetRenewed]: "FreeAttributeResetRenewed",
  [PropertyBool.SkillTemplesTimerReset]: "SkillTemplesTimerReset",
  [PropertyBool.FreeMasteryResetRenewed]: "FreeMasteryResetRenewed",
}

// ArmorMod <-> Name mapping
// TODO: The breakpoints need to be figured out. These are guesses.
export const ArmorModPhrase = (mod: number | undefined): string => {
  if (!mod) {
    return "ArmorModUndefinedPhrase"
  }

  if (mod >= 2) {
    return "Unparalleled"
  }

  if (mod >= 1.2) {
    return "Above Average"
  }

  // Definitely goes as low as 0.8
  if (mod < 1.2 && mod >= 0.8) {
    return "Average"
  }

  if (mod < 0.8 && mod >= 0.6) {
    return "Below Average"
  }

  // Poor is at least 0.2 or lower
  if (mod < 0.6) {
    return "Poor"
  }

  return "ArmorModPhraseUnknown"
}

// ACE::CoverageMask.cs
export enum CoverageMask {
  Unknown = 0x00000001,
  UnderwearUpperLegs = 0x00000002,
  UnderwearLowerLegs = 0x00000004,
  UnderwearChest = 0x00000008,
  UnderwearAbdomen = 0x00000010,
  UnderwearUpperArms = 0x00000020,
  UnderwearLowerArms = 0x00000040,
  OuterwearUpperLegs = 0x00000100,
  OuterwearLowerLegs = 0x00000200,
  OuterwearChest = 0x00000400,
  OuterwearAbdomen = 0x00000800,
  OuterwearUpperArms = 0x00001000,
  OuterwearLowerArms = 0x00002000,
  Head = 0x00004000,
  Hands = 0x00008000,
  Feet = 0x00010000,
}

export const CoveragePhrase = (value: number) => {
  const parts = []

  if (value & CoverageMask.Head) {
    parts.push("Head")
  }

  if (value & CoverageMask.OuterwearChest || value & CoverageMask.UnderwearChest) {
    parts.push("Chest")
  }

  if (value & CoverageMask.OuterwearAbdomen || value & CoverageMask.UnderwearAbdomen) {
    parts.push("Abdomen")
  }

  if (value & CoverageMask.UnderwearUpperArms || value & CoverageMask.OuterwearUpperArms) {
    parts.push("Upper Arms")
  }

  if (value & CoverageMask.UnderwearLowerArms || value & CoverageMask.OuterwearLowerArms) {
    parts.push("Lower Arms")
  }

  if (value & CoverageMask.UnderwearUpperLegs || value & CoverageMask.OuterwearUpperLegs) {
    parts.push("Upper Legs")
  }

  if (value & CoverageMask.UnderwearLowerLegs && value & CoverageMask.OuterwearLowerLegs) {
    parts.push("Lower Legs")
  }

  if (value & CoverageMask.Hands) {
    parts.push("Hands")
  }

  if (value & CoverageMask.Feet) {
    parts.push("Feet")
  }

  return parts.join(", ")
}

// ACE::DamageType
export enum DamageType {
  Undef = 0x0,
  Slash = 0x1,
  Pierce = 0x2,
  Bludgeon = 0x4,
  Cold = 0x8,
  Fire = 0x10,
  Acid = 0x20,
  Electric = 0x40,
  Health = 0x80,
  Stamina = 0x100,
  Mana = 0x200,
  Nether = 0x400,
}

export const DamageTypePhrase = (value: number) => {
  const types = []

  if (value & DamageType.Slash) {
    types.push("Slashing")
  }

  if (value & DamageType.Pierce) {
    types.push("Piercing")
  }

  if (value & DamageType.Bludgeon) {
    types.push("Bludgeon")
  }

  if (value & DamageType.Cold) {
    types.push("Cold")
  }

  if (value & DamageType.Fire) {
    types.push("Fire")
  }

  if (value & DamageType.Acid) {
    types.push("Acid")
  }

  if (value & DamageType.Electric) {
    types.push("Lightning")
  }

  if (value & DamageType.Health) {
    types.push("Health")
  }

  if (value & DamageType.Stamina) {
    types.push("Stamina")
  }

  if (value & DamageType.Mana) {
    types.push("Mana")
  }

  if (value & DamageType.Nether) {
    types.push("Nether")
  }

  return types.join("/")
}

// ACE: AmmoType
export enum AmmoType {
  None = 0x0,
  Arrow = 0x1,
  Bolt = 0x2,
  Atlatl = 0x4,
  ArrowCrystal = 0x8,
  BoltCrystal = 0x10,
  AtlatlCrystal = 0x20,
  ArrowChorizite = 0x40,
  BoltChorizite = 0x80,
  AtlatlChorizite = 0x100,
}

export const AmmoTypePhrase = (ammo_type: AmmoType) => {
  if (ammo_type == AmmoType.None) {
    return "none"
  }
  else if (ammo_type == AmmoType.Arrow) {
    return "arrows"
  }
  else if (ammo_type == AmmoType.Bolt) {
    return "quarrels"
  }
  else if (ammo_type == AmmoType.Atlatl) {
    return "atlatl darts"
  }
  else if (ammo_type == AmmoType.ArrowCrystal) {
    return "crystal-tip arrows"
  }
  else if (ammo_type == AmmoType.BoltCrystal) {
    return "crystal-tip quarrels"
  }
  else if (ammo_type == AmmoType.AtlatlCrystal) {
    return "crystal-tip atlatl darts"
  }
  else if (ammo_type == AmmoType.ArrowChorizite) {
    return "chorizite arrows"
  }
  else if (ammo_type == AmmoType.BoltChorizite) {
    return "chorizite quarrels"
  }
  else if (ammo_type == AmmoType.AtlatlChorizite) {
    return "chorizite atlatl darts"
  }

  return "error"
}

// ACE::PropertyDataId
export enum PropertyDataId {
  Undef = 0,
  Setup = 1,
  MotionTable = 2,
  SoundTable = 3,
  CombatTable = 4,
  QualityFilter = 5,
  PaletteBase = 6,
  ClothingBase = 7,
  Icon = 8,
  EyesTexture = 9,
  NoseTexture = 10,
  MouthTexture = 11,
  DefaultEyesTexture = 12,
  DefaultNoseTexture = 13,
  DefaultMouthTexture = 14,
  HairPalette = 15,
  EyesPalette = 16,
  SkinPalette = 17,
  HeadObject = 18,
  ActivationAnimation = 19,
  InitMotion = 20,
  ActivationSound = 21,
  PhysicsEffectTable = 22,
  UseSound = 23,
  UseTargetAnimation = 24,
  UseTargetSuccessAnimation = 25,
  UseTargetFailureAnimation = 26,
  UseUserAnimation = 27,
  Spell = 28,
  SpellComponent = 29,
  PhysicsScript = 30,
  LinkedPortalOne = 31,
  WieldedTreasureType = 32,
  InventoryTreasureType = 33,
  ShopTreasureType = 34,
  DeathTreasureType = 35,
  MutateFilter = 36,
  ItemSkillLimit = 37,
  UseCreateItem = 38,
  DeathSpell = 39,
  VendorsClassId = 40,
  ItemSpecializedOnly = 41,
  HouseId = 42,
  AccountHouseId = 43,
  RestrictionEffect = 44,
  CreationMutationFilter = 45,
  TsysMutationFilter = 46,
  LastPortal = 47,
  LinkedPortalTwo = 48,
  OriginalPortal = 49,
  IconOverlay = 50,
  IconOverlaySecondary = 51,
  IconUnderlay = 52,
  AugmentationMutationFilter = 53,
  AugmentationEffect = 54,
  ProcSpell = 55,
  AugmentationCreateItem = 56,
  AlternateCurrency = 57,
  BlueSurgeSpell = 58,
  YellowSurgeSpell = 59,
  RedSurgeSpell = 60,
  OlthoiDeathTreasureType = 61,
  PCAPRecordedWeenieHeader = 8001,
  PCAPRecordedWeenieHeader2 = 8002,
  PCAPRecordedObjectDesc = 8003,
  PCAPRecordedPhysicsDesc = 8005,
  PCAPRecordedParentLocation = 8009,
  PCAPRecordedDefaultScript = 8019,
  PCAPRecordedTimestamp0 = 8020,
  PCAPRecordedTimestamp1 = 8021,
  PCAPRecordedTimestamp2 = 8022,
  PCAPRecordedTimestamp3 = 8023,
  PCAPRecordedTimestamp4 = 8024,
  PCAPRecordedTimestamp5 = 8025,
  PCAPRecordedTimestamp6 = 8026,
  PCAPRecordedTimestamp7 = 8027,
  PCAPRecordedTimestamp8 = 8028,
  PCAPRecordedTimestamp9 = 8029,
  PCAPRecordedMaxVelocityEstimated = 8030,
  PCAPPhysicsDIDDataTemplatedFrom = 8044,
}

export const PropertyDataIdName: StringIndexedDict<string> = {
  [PropertyDataId.Undef]: "Undef",
  [PropertyDataId.Setup]: "Setup",
  [PropertyDataId.MotionTable]: "MotionTable",
  [PropertyDataId.SoundTable]: "SoundTable",
  [PropertyDataId.CombatTable]: "CombatTable",
  [PropertyDataId.QualityFilter]: "QualityFilter",
  [PropertyDataId.PaletteBase]: "PaletteBase",
  [PropertyDataId.ClothingBase]: "ClothingBase",
  [PropertyDataId.Icon]: "Icon",
  [PropertyDataId.EyesTexture]: "EyesTexture",
  [PropertyDataId.NoseTexture]: "NoseTexture",
  [PropertyDataId.MouthTexture]: "MouthTexture",
  [PropertyDataId.DefaultEyesTexture]: "DefaultEyesTexture",
  [PropertyDataId.DefaultNoseTexture]: "DefaultNoseTexture",
  [PropertyDataId.DefaultMouthTexture]: "DefaultMouthTexture",
  [PropertyDataId.HairPalette]: "HairPalette",
  [PropertyDataId.EyesPalette]: "EyesPalette",
  [PropertyDataId.SkinPalette]: "SkinPalette",
  [PropertyDataId.HeadObject]: "HeadObject",
  [PropertyDataId.ActivationAnimation]: "ActivationAnimation",
  [PropertyDataId.InitMotion]: "InitMotion",
  [PropertyDataId.ActivationSound]: "ActivationSound",
  [PropertyDataId.PhysicsEffectTable]: "PhysicsEffectTable",
  [PropertyDataId.UseSound]: "UseSound",
  [PropertyDataId.UseTargetAnimation]: "UseTargetAnimation",
  [PropertyDataId.UseTargetSuccessAnimation]: "UseTargetSuccessAnimation",
  [PropertyDataId.UseTargetFailureAnimation]: "UseTargetFailureAnimation",
  [PropertyDataId.UseUserAnimation]: "UseUserAnimation",
  [PropertyDataId.Spell]: "Spell",
  [PropertyDataId.SpellComponent]: "SpellComponent",
  [PropertyDataId.PhysicsScript]: "PhysicsScript",
  [PropertyDataId.LinkedPortalOne]: "LinkedPortalOne",
  [PropertyDataId.WieldedTreasureType]: "WieldedTreasureType",
  [PropertyDataId.InventoryTreasureType]: "InventoryTreasureType",
  [PropertyDataId.ShopTreasureType]: "ShopTreasureType",
  [PropertyDataId.DeathTreasureType]: "DeathTreasureType",
  [PropertyDataId.MutateFilter]: "MutateFilter",
  [PropertyDataId.ItemSkillLimit]: "ItemSkillLimit",
  [PropertyDataId.UseCreateItem]: "UseCreateItem",
  [PropertyDataId.DeathSpell]: "DeathSpell",
  [PropertyDataId.VendorsClassId]: "VendorsClassId",
  [PropertyDataId.ItemSpecializedOnly]: "ItemSpecializedOnly",
  [PropertyDataId.HouseId]: "HouseId",
  [PropertyDataId.AccountHouseId]: "AccountHouseId",
  [PropertyDataId.RestrictionEffect]: "RestrictionEffect",
  [PropertyDataId.CreationMutationFilter]: "CreationMutationFilter",
  [PropertyDataId.TsysMutationFilter]: "TsysMutationFilter",
  [PropertyDataId.LastPortal]: "LastPortal",
  [PropertyDataId.LinkedPortalTwo]: "LinkedPortalTwo",
  [PropertyDataId.OriginalPortal]: "OriginalPortal",
  [PropertyDataId.IconOverlay]: "IconOverlay",
  [PropertyDataId.IconOverlaySecondary]: "IconOverlaySecondary",
  [PropertyDataId.IconUnderlay]: "IconUnderlay",
  [PropertyDataId.AugmentationMutationFilter]: "AugmentationMutationFilter",
  [PropertyDataId.AugmentationEffect]: "AugmentationEffect",
  [PropertyDataId.ProcSpell]: "ProcSpell",
  [PropertyDataId.AugmentationCreateItem]: "AugmentationCreateItem",
  [PropertyDataId.AlternateCurrency]: "AlternateCurrency",
  [PropertyDataId.BlueSurgeSpell]: "BlueSurgeSpell",
  [PropertyDataId.YellowSurgeSpell]: "YellowSurgeSpell",
  [PropertyDataId.RedSurgeSpell]: "RedSurgeSpell",
  [PropertyDataId.OlthoiDeathTreasureType]: "OlthoiDeathTreasureType",
  [PropertyDataId.PCAPRecordedWeenieHeader]: "PCAPRecordedWeenieHeader",
  [PropertyDataId.PCAPRecordedWeenieHeader2]: "PCAPRecordedWeenieHeader2",
  [PropertyDataId.PCAPRecordedObjectDesc]: "PCAPRecordedObjectDesc",
  [PropertyDataId.PCAPRecordedPhysicsDesc]: "PCAPRecordedPhysicsDesc",
  [PropertyDataId.PCAPRecordedParentLocation]: "PCAPRecordedParentLocation",
  [PropertyDataId.PCAPRecordedDefaultScript]: "PCAPRecordedDefaultScript",
  [PropertyDataId.PCAPRecordedTimestamp0]: "PCAPRecordedTimestamp0",
  [PropertyDataId.PCAPRecordedTimestamp1]: "PCAPRecordedTimestamp1",
  [PropertyDataId.PCAPRecordedTimestamp2]: "PCAPRecordedTimestamp2",
  [PropertyDataId.PCAPRecordedTimestamp3]: "PCAPRecordedTimestamp3",
  [PropertyDataId.PCAPRecordedTimestamp4]: "PCAPRecordedTimestamp4",
  [PropertyDataId.PCAPRecordedTimestamp5]: "PCAPRecordedTimestamp5",
  [PropertyDataId.PCAPRecordedTimestamp6]: "PCAPRecordedTimestamp6",
  [PropertyDataId.PCAPRecordedTimestamp7]: "PCAPRecordedTimestamp7",
  [PropertyDataId.PCAPRecordedTimestamp8]: "PCAPRecordedTimestamp8",
  [PropertyDataId.PCAPRecordedTimestamp9]: "PCAPRecordedTimestamp9",
  [PropertyDataId.PCAPRecordedMaxVelocityEstimated]: "PCAPRecordedMaxVelocityEstimated",
  [PropertyDataId.PCAPPhysicsDIDDataTemplatedFrom]: "PCAPPhysicsDIDDataTemplatedFrom",
}

// ACE::PropertyInt64
export enum PropertyInt64 {
  Undef = 0,
  TotalExperience = 1,
  AvailableExperience = 2,
  AugmentationCost = 3,
  ItemTotalXp = 4,
  ItemBaseXp = 5,
  AvailableLuminance = 6,
  MaximumLuminance = 7,
  InteractionReqs = 8,
}

export const PropertyInt64Name: StringIndexedDict<string> = {
  [PropertyInt64.Undef]: "Undef",
  [PropertyInt64.TotalExperience]: "TotalExperience",
  [PropertyInt64.AvailableExperience]: "AvailableExperience",
  [PropertyInt64.AugmentationCost]: "AugmentationCost",
  [PropertyInt64.ItemTotalXp]: "ItemTotalXp",
  [PropertyInt64.ItemBaseXp]: "ItemBaseXp",
  [PropertyInt64.AvailableLuminance]: "AvailableLuminance",
  [PropertyInt64.MaximumLuminance]: "MaximumLuminance",
  [PropertyInt64.InteractionReqs]: "InteractionReqs",
}

export enum PropertyInstanceId {
  Undef = 0,
  Owner = 1,
  Container = 2,
  Wielder = 3,
  Freezer = 4,
  Viewer = 5,
  Generator = 6,
  Scribe = 7,
  CurrentCombatTarget = 8,
  CurrentEnemy = 9,
  ProjectileLauncher = 10,
  CurrentAttacker = 11,
  CurrentDamager = 12,
  CurrentFollowTarget = 13,
  CurrentAppraisalTarget = 14,
  CurrentFellowshipAppraisalTarget = 15,
  ActivationTarget = 16,
  Creator = 17,
  Victim = 18,
  Killer = 19,
  Vendor = 20,
  Customer = 21,
  Bonded = 22,
  Wounder = 23,
  Allegiance = 24,
  Patron = 25,
  Monarch = 26,
  CombatTarget = 27,
  HealthQueryTarget = 28,
  LastUnlocker = 29,
  CrashAndTurnTarget = 30,
  AllowedActivator = 31,
  HouseOwner = 32,
  House = 33,
  Slumlord = 34,
  ManaQueryTarget = 35,
  CurrentGame = 36,
  RequestedAppraisalTarget = 37,
  AllowedWielder = 38,
  AssignedTarget = 39,
  LimboSource = 40,
  Snooper = 41,
  TeleportedCharacter = 42,
  Pet = 43,
  PetOwner = 44,
  PetDevice = 45,
  PCAPRecordedObjectIID = 8000,
  PCAPRecordedParentIID = 8008,
}

export const PropertyInstanceIdName: StringIndexedDict<string> = {
  [PropertyInstanceId.Undef]: "Undef",
  [PropertyInstanceId.Owner]: "Owner",
  [PropertyInstanceId.Container]: "Container",
  [PropertyInstanceId.Wielder]: "Wielder",
  [PropertyInstanceId.Freezer]: "Freezer",
  [PropertyInstanceId.Viewer]: "Viewer",
  [PropertyInstanceId.Generator]: "Generator",
  [PropertyInstanceId.Scribe]: "Scribe",
  [PropertyInstanceId.CurrentCombatTarget]: "CurrentCombatTarget",
  [PropertyInstanceId.CurrentEnemy]: "CurrentEnemy",
  [PropertyInstanceId.ProjectileLauncher]: "ProjectileLauncher",
  [PropertyInstanceId.CurrentAttacker]: "CurrentAttacker",
  [PropertyInstanceId.CurrentDamager]: "CurrentDamager",
  [PropertyInstanceId.CurrentFollowTarget]: "CurrentFollowTarget",
  [PropertyInstanceId.CurrentAppraisalTarget]: "CurrentAppraisalTarget",
  [PropertyInstanceId.CurrentFellowshipAppraisalTarget]: "CurrentFellowshipAppraisalTarget",
  [PropertyInstanceId.ActivationTarget]: "ActivationTarget",
  [PropertyInstanceId.Creator]: "Creator",
  [PropertyInstanceId.Victim]: "Victim",
  [PropertyInstanceId.Killer]: "Killer",
  [PropertyInstanceId.Vendor]: "Vendor",
  [PropertyInstanceId.Customer]: "Customer",
  [PropertyInstanceId.Bonded]: "Bonded",
  [PropertyInstanceId.Wounder]: "Wounder",
  [PropertyInstanceId.Allegiance]: "Allegiance",
  [PropertyInstanceId.Patron]: "Patron",
  [PropertyInstanceId.Monarch]: "Monarch",
  [PropertyInstanceId.CombatTarget]: "CombatTarget",
  [PropertyInstanceId.HealthQueryTarget]: "HealthQueryTarget",
  [PropertyInstanceId.LastUnlocker]: "LastUnlocker",
  [PropertyInstanceId.CrashAndTurnTarget]: "CrashAndTurnTarget",
  [PropertyInstanceId.AllowedActivator]: "AllowedActivator",
  [PropertyInstanceId.HouseOwner]: "HouseOwner",
  [PropertyInstanceId.House]: "House",
  [PropertyInstanceId.Slumlord]: "Slumlord",
  [PropertyInstanceId.ManaQueryTarget]: "ManaQueryTarget",
  [PropertyInstanceId.CurrentGame]: "CurrentGame",
  [PropertyInstanceId.RequestedAppraisalTarget]: "RequestedAppraisalTarget",
  [PropertyInstanceId.AllowedWielder]: "AllowedWielder",
  [PropertyInstanceId.AssignedTarget]: "AssignedTarget",
  [PropertyInstanceId.LimboSource]: "LimboSource",
  [PropertyInstanceId.Snooper]: "Snooper",
  [PropertyInstanceId.TeleportedCharacter]: "TeleportedCharacter",
  [PropertyInstanceId.Pet]: "Pet",
  [PropertyInstanceId.PetOwner]: "PetOwner",
  [PropertyInstanceId.PetDevice]: "PetDevice",
  [PropertyInstanceId.PCAPRecordedObjectIID]: "PCAPRecordedObjectIID",
  [PropertyInstanceId.PCAPRecordedParentIID]: "PCAPRecordedParentIID",
}

// WIP
// 20, 30 is Fast
// 35 is Average
// 55 is Slow
// 120 is Very Slow
// TODO: Very Fast?
export const SpeedCategoryName = (speed: number) => {
  if (speed <= 30) {
    return "Fast"
  }
  else if (speed <= 45) {
    return "Average"
  }
  else if (speed <= 55) {
    return "Slow"
  }
  else {
    return "Very Slow"
  }
}
